within Phdbook.Kapitel5;
package Kapitel5_1
extends TransiEnt.Basics.Icons.Package;

  package Check
  extends TransiEnt.Basics.Icons.CheckPackage;
    model CheckeLIVES "Example model for voltage collapse for testing eLIVES"
    //________________________________________________________________________________//
    // Component of the TransiEnt Library, version: 1.3.0                             //
    //                                                                                //
    // Licensed by Hamburg University of Technology under Modelica License 2.         //
    // Copyright 2020, Hamburg University of Technology.                              //
    //________________________________________________________________________________//
    //                                                                                //
    // TransiEnt.EE and ResiliEntEE are research projects supported by the German     //
    // Federal Ministry of Economics and Energy (FKZ 03ET4003 and 03ET4048).          //
    // The TransiEnt Library research team consists of the following project partners://
    // Institute of Engineering Thermodynamics (Hamburg University of Technology),    //
    // Institute of Energy Systems (Hamburg University of Technology),                //
    // Institute of Electrical Power and Energy Technology                            //
    // (Hamburg University of Technology)                                             //
    // Institute of Electrical Power Systems and Automation                           //
    // (Hamburg University of Technology)                                             //
    // and is supported by                                                            //
    // XRG Simulation GmbH (Hamburg, Germany).                                        //
    //________________________________________________________________________________//

    // _____________________________________________
    //
    //             Parameters
    // _____________________________________________

    // _____________________________________________
    //
    //             Variable Declarations
    // _____________________________________________

    // _____________________________________________
    //
    //           Instances of other Classes
    // _____________________________________________

      TransiEnt.Components.Electrical.Grid.PiModelComplex_advanced transmissionLine_Northern_2(
        ChooseVoltageLevel=3,
        p=2,
        HVCableType=TransiEnt.Components.Electrical.Grid.Characteristics.HVCabletypes.L6,
        l(displayUnit="km") = 200000) annotation (Placement(transformation(extent={{-40,30},{-20,50}})));

      inner TransiEnt.SimCenter simCenter(v_n(displayUnit="kV") = 380000)
        annotation (Placement(transformation(extent={{-148,-98},{-128,-78}})));
      inner TransiEnt.ModelStatistics modelStatistics annotation (Placement(transformation(extent={{-110,
                -98},{-90,-78}})));

      TransiEnt.Consumer.Electrical.DynamicExponentialElectricConsumerComplex Lb_DynamicLoad(
        v_n(displayUnit="kV") = 110000,
        P_n(displayUnit="MW") = 1522500000,
        Q_n=558.25e6)
                   annotation (Placement(transformation(extent={{104,-30},{124,-10}})));
      TransiEnt.Components.Electrical.Grid.PiModelComplex_advanced transmissionLine_Central(
        ChooseVoltageLevel=3,
        p=2,
        MVCableType=TransiEnt.Components.Electrical.Grid.Characteristics.MVCabletypes.L1,
        HVCableType=TransiEnt.Components.Electrical.Grid.Characteristics.HVCabletypes.L6,
        l(displayUnit="km") = 200000)
        annotation (Placement(transformation(extent={{18,30},{38,50}})));

      TransiEnt.Components.Electrical.Grid.PiModelComplex_advanced transmissionLine_CentralFault(
        activateSwitch=true,
        ChooseVoltageLevel=3,
        p=2,
        MVCableType=TransiEnt.Components.Electrical.Grid.Characteristics.MVCabletypes.L1,
        HVCableType=TransiEnt.Components.Electrical.Grid.Characteristics.HVCabletypes.L4,
        l(displayUnit="km") = 200000)
        annotation (Placement(transformation(extent={{16,64},{36,84}})));

      Modelica.Blocks.Sources.BooleanStep  BooleanFault(
        startTime(displayUnit="s") = 400)
        annotation (Placement(transformation(extent={{-10,92},{6,108}})));
      TransiEnt.Components.Electrical.Grid.PiModelComplex_advanced transmissionLine_CentralLower_1(
        activateSwitch=false,
        ChooseVoltageLevel=3,
        p=2,
        LVCableType=TransiEnt.Components.Electrical.Grid.Characteristics.LVCabletypes.K2,
        MVCableType=TransiEnt.Components.Electrical.Grid.Characteristics.MVCabletypes.L1,
        HVCableType=TransiEnt.Components.Electrical.Grid.Characteristics.HVCabletypes.L6,
        l(displayUnit="km") = 300000) annotation (Placement(transformation(extent={{98,28},{122,52}})));

      TransiEnt.Components.Electrical.Grid.PiModelComplex_advanced transmissionLine_Southern_2(
        activateSwitch=false,
        ChooseVoltageLevel=3,
        p=2,
        LVCableType=TransiEnt.Components.Electrical.Grid.Characteristics.LVCabletypes.K1,
        MVCableType=TransiEnt.Components.Electrical.Grid.Characteristics.MVCabletypes.L1,
        HVCableType=TransiEnt.Components.Electrical.Grid.Characteristics.HVCabletypes.L6,
        l(displayUnit="km") = 250000) annotation (Placement(transformation(extent={{208,28},{232,52}})));

      TransiEnt.Components.Electrical.Grid.PiModelComplex_advanced transmissionLine_CentralLower_2(
        activateSwitch=false,
        ChooseVoltageLevel=3,
        p=2,
        LVCableType=TransiEnt.Components.Electrical.Grid.Characteristics.LVCabletypes.K2,
        MVCableType=TransiEnt.Components.Electrical.Grid.Characteristics.MVCabletypes.L1,
        HVCableType=TransiEnt.Components.Electrical.Grid.Characteristics.HVCabletypes.L6,
        l(displayUnit="km") = 300000) annotation (Placement(transformation(extent={{134,28},{158,52}})));

      TransiEnt.Components.Boundaries.Electrical.ComplexPower.PQBoundary pQBoundary3(
        useInputConnectorP=false,
        useInputConnectorQ=false,
        v_n(displayUnit="kV") = 380000)
                                       annotation (Placement(transformation(extent={{132,68},{118,82}})));
      TransiEnt.Components.Electrical.Grid.PiModelComplex_advanced transmissionLine_Northern_1(
        ChooseVoltageLevel=3,
        p=2,
        HVCableType=TransiEnt.Components.Electrical.Grid.Characteristics.HVCabletypes.L6,
        l(displayUnit="km") = 200000) annotation (Placement(transformation(extent={{-70,30},{-50,50}})));
      TransiEnt.Components.Boundaries.Electrical.ComplexPower.PQBoundary pQBoundary4(
        useInputConnectorP=false,
        useInputConnectorQ=false,
        v_n(displayUnit="kV") = 380000)
                                       annotation (Placement(transformation(extent={{-50,72},{-66,88}})));
      TransiEnt.Components.Electrical.Grid.PiModelComplex_advanced transmissionLine_Southern_1(
        activateSwitch=false,
        ChooseVoltageLevel=3,
        p=2,
        LVCableType=TransiEnt.Components.Electrical.Grid.Characteristics.LVCabletypes.K1,
        MVCableType=TransiEnt.Components.Electrical.Grid.Characteristics.MVCabletypes.L1,
        HVCableType=TransiEnt.Components.Electrical.Grid.Characteristics.HVCabletypes.L6,
        l(displayUnit="km") = 250000) annotation (Placement(transformation(extent={{176,28},{200,52}})));
      TransiEnt.Components.Boundaries.Electrical.ComplexPower.PQBoundary pQBoundary5(
        useInputConnectorP=false,
        useInputConnectorQ=false,
        v_n(displayUnit="kV") = 380000)
                                       annotation (Placement(transformation(extent={{204,2},{188,16}})));

      TransiEnt.Components.Electrical.PowerTransformation.SimpleTransformerComplex Transformer_L1(
        UseInput=true,
        U_P(displayUnit="kV") = 380000,
        U_S(displayUnit="kV") = 110000,
        P_p(displayUnit="MW", start=15000000),
        P_n(displayUnit="MW", start=-15000000)) annotation (Placement(
            transformation(
            extent={{10,-10},{-10,10}},
            rotation=90,
            origin={-60,-20})));
      OLTC_OutputCurrentTap                                                         OLTC_L1(
        numberTaps=11,
        v_prim_n(displayUnit="kV") = 380000,
        v_sec_n(displayUnit="kV") = 110000) annotation (Placement(transformation(extent={{-74,-58},{-92,-42}})));
      TransiEnt.Components.Electrical.PowerTransformation.SimpleTransformerComplex Transformer_L_a(
        UseInput=true,
        U_P(displayUnit="kV") = 380000,
        U_S(displayUnit="kV") = 110000,
        P_p(displayUnit="MW", start=15000000),
        P_n(displayUnit="MW", start=-15000000)) annotation (Placement(
            transformation(
            extent={{10,-10},{-10,10}},
            rotation=90,
            origin={-6,2})));
      OLTC_OutputCurrentTap                                                         OLTC_L_a(
        numberTaps=11,
        v_prim_n(displayUnit="kV") = 380000,
        v_sec_n(displayUnit="kV") = 110000,
        T_delay=10,
        currentTap(start=7)) annotation (Placement(transformation(extent={{-10,-28},{-28,-10}})));
      TransiEnt.Components.Electrical.PowerTransformation.SimpleTransformerComplex Transformer_L_b(
        UseInput=true,
        U_P(displayUnit="kV") = 380000,
        U_S(displayUnit="kV") = 110000,
        P_p(displayUnit="MW", start=15000000),
        P_n(displayUnit="MW", start=-15000000)) annotation (Placement(
            transformation(
            extent={{10,-10},{-10,10}},
            rotation=90,
            origin={90,8})));
      OLTC_OutputCurrentTap                                                         OLTC_L_b(
        numberTaps=11,
        v_prim_n(displayUnit="kV") = 380000,
        v_sec_n(displayUnit="kV") = 110000) annotation (Placement(transformation(extent={{82,-30},{64,-12}})));
      TransiEnt.Components.Electrical.PowerTransformation.SimpleTransformerComplex Transformer_L_c(
        UseInput=true,
        U_P(displayUnit="kV") = 380000,
        U_S(displayUnit="kV") = 110000,
        P_p(displayUnit="MW", start=15000000),
        P_n(displayUnit="MW", start=-15000000)) annotation (Placement(
            transformation(
            extent={{10,-10},{-10,10}},
            rotation=90,
            origin={162,2})));
      TransiEnt.Components.Electrical.PowerTransformation.SimpleTransformerComplex Transformer_L2(
        UseInput=true,
        U_P(displayUnit="kV") = 380000,
        U_S(displayUnit="kV") = 110000,
        P_p(displayUnit="MW", start=15000000),
        P_n(displayUnit="MW", start=-15000000)) annotation (Placement(
            transformation(
            extent={{-10,-10},{10,10}},
            rotation=0,
            origin={258,40})));
      OLTC_OutputCurrentTap                                                         OLTC_L_c(
        numberTaps=11,
        v_prim_n(displayUnit="kV") = 380000,
        v_sec_n(displayUnit="kV") = 110000,
        currentTap(start=-11)) annotation (Placement(transformation(extent={{154,-28},{136,-10}})));
      OLTC_OutputCurrentTap                                                         OLTC_L2(
        numberTaps=11,
        v_prim_n(displayUnit="kV") = 380000,
        v_sec_n(displayUnit="kV") = 110000) annotation (Placement(transformation(extent={{274,72},{256,88}})));
      TransiEnt.Producer.Electrical.Others.Biomass biomass_G1_Slack(
        primaryBalancingController(maxGradientPrCtrl=0.03/30, maxValuePrCtrl=0.03),
        H=11,
        redeclare TransiEnt.Basics.Interfaces.Electrical.ComplexPowerPort epp,
        set_P_init=false,
        isPrimaryControlActive=true,
        P_min_star=0.1,
        redeclare TransiEnt.Components.Electrical.Machines.ExcitationSystemsVoltageController.DCExciter Exciter(
          TA=1,
          KA=80,
          LimitofExcitation=0.6),
        isSecondaryControlActive=true,
        isExternalSecondaryController=true,
        P_el_n(displayUnit="MW") = 3000000000,
        redeclare
          TransiEnt.Components.Electrical.Machines.SynchronousMachineComplex
          Generator(IsSlack=true, R_a=0))
        annotation (Placement(transformation(extent={{-118,36},{-90,64}})));

      Modelica.Blocks.Sources.Constant const(k=-biomass_G1_Slack.P_init)
        annotation (Placement(transformation(extent={{-80,86},{-94,100}})));
      Modelica.Blocks.Continuous.Integrator integrator(k=-1.36e5)
                                                                annotation (Placement(transformation(
            extent={{-8,-8},{8,8}},
            rotation=0,
            origin={-126,80})));
      Modelica.Blocks.Sources.RealExpression globalFrequency_reference(y=simCenter.f_n) annotation (Placement(transformation(extent={{-84,10},
                {-106,22}})));
         TransiEnt.Components.Sensors.ElectricFrequencyComplex globalFrequency annotation (Placement(transformation(extent={{-104,
                -14},{-116,-2}})));
      Modelica.Blocks.Math.Feedback feedback annotation (Placement(transformation(extent={{-122,10},
                {-134,22}})));
      TransiEnt.Producer.Electrical.Others.Biomass biomass_G3(
        primaryBalancingController(maxGradientPrCtrl=0.03/30, maxValuePrCtrl=0.03),
        P_init_set=100e6,
        H=11,
        redeclare TransiEnt.Basics.Interfaces.Electrical.ComplexPowerPort epp,
        set_P_init=true,
        isPrimaryControlActive=true,
        redeclare TransiEnt.Components.Electrical.Machines.ExcitationSystemsVoltageController.DCExciter Exciter(LimitofExcitation=0.5),
        isSecondaryControlActive=false,
        isExternalSecondaryController=true,
        P_el_n(displayUnit="MW") = 250000000,
        redeclare
          TransiEnt.Components.Electrical.Machines.SynchronousMachineComplex
          Generator(R_a=0))
        annotation (Placement(transformation(extent={{90,70},{66,94}})));

      Modelica.Blocks.Sources.Constant const1(k=-biomass_G3.P_init)
                                                                 annotation (Placement(transformation(extent={{116,96},
                {102,110}})));
      TransiEnt.Producer.Electrical.Others.Biomass biomass_G2(
        primaryBalancingController(maxGradientPrCtrl=0.03/30, maxValuePrCtrl=0.03),
        P_init_set=50e6,
        H=11,
        redeclare TransiEnt.Basics.Interfaces.Electrical.ComplexPowerPort epp,
        set_P_init=true,
        isPrimaryControlActive=true,
        redeclare TransiEnt.Components.Electrical.Machines.ExcitationSystemsVoltageController.DCExciter Exciter(LimitofExcitation=0.5),
        isSecondaryControlActive=false,
        isExternalSecondaryController=true,
        P_el_n(displayUnit="MW") = 100000000,
        redeclare
          TransiEnt.Components.Electrical.Machines.SynchronousMachineComplex
          Generator(R_a=0))
        annotation (Placement(transformation(extent={{202,62},{224,84}})));

      Modelica.Blocks.Sources.Constant const2(k=-biomass_G2.P_init)
                                                                 annotation (Placement(transformation(extent={{192,92},
                {206,106}})));
      Modelica.Blocks.Logical.Not not1
        annotation (Placement(transformation(extent={{14,94},{26,106}})));
      TransiEnt.Consumer.Electrical.DynamicExponentialElectricConsumerComplex Lc_DynamicLoad(
        v_n(displayUnit="kV") = 110000,
        Q_n=62.5e6,
        P_n(displayUnit="MW") = 125000000) annotation (Placement(transformation(extent={{194,-30},{216,-8}})));
      TransiEnt.Consumer.Electrical.DynamicExponentialElectricConsumerComplex La_DynamicLoad(
        v_n(displayUnit="kV") = 110000,
        P_n(displayUnit="MW") = 101500000,
        Q_n=50.75e6)
                  annotation (Placement(transformation(extent={{14,-30},{34,-10}})));
      TransiEnt.Consumer.Electrical.DynamicExponentialElectricConsumerComplex L1_DynamicLoad(
        v_n(displayUnit="kV") = 110000,
        P_n(displayUnit="MW") = 203000000,
        Q_n=101.5e6)
                   annotation (Placement(transformation(extent={{-48,-60},{-28,-40}})));
      TransiEnt.Consumer.Electrical.DynamicExponentialElectricConsumerComplex L2_DynamicLoad(
        v_n(displayUnit="kV") = 110000,
        P_n(displayUnit="MW") = 126875000,
        Q_n=76.125e6)
                  annotation (Placement(transformation(extent={{296,30},{316,50}})));
      TransiEnt.Components.Boundaries.Electrical.ComplexPower.PQBoundary pQBoundary1(
        useInputConnectorP=false,
        useInputConnectorQ=false,
        v_n(displayUnit="kV") = 380000)
                                       annotation (Placement(transformation(extent={{-18,72},
                {-34,88}})));
      TransiEnt.Components.Boundaries.Electrical.ComplexPower.PQBoundary pQBoundary2(
        useInputConnectorP=false,
        useInputConnectorQ=false,
        v_n(displayUnit="kV") = 380000)
                                       annotation (Placement(transformation(extent={{162,72},{146,86}})));
    // _____________________________________________
    //
    //           Functions
    // _____________________________________________

    function plotResult

      constant String resultFileName = "GridN5AreaFirstVoltageCollapse.mat";

      output String resultFile;

    algorithm
      clearlog();
        assert(cd(Modelica.Utilities.System.getEnvironmentVariable(TransiEnt.Basics.Types.WORKINGDIR)), "Error changing directory: Working directory must be set as environment variable with name 'workingdir' for this script to work.");
      resultFile :=TransiEnt.Basics.Functions.fullPathName(Modelica.Utilities.System.getEnvironmentVariable(TransiEnt.Basics.Types.WORKINGDIR) + "/" + resultFileName);
      removePlots();
    createPlot(id=1, position={809, 0, 791, 733}, y={"OLTC_L_a.epp.f"}, grid=true, filename=resultFile);
    createPlot(id=2, position={0, 0, 791, 733}, y={"OLTC_L_a.epp.v", "OLTC_L_b.epp.v"}, grid=true, filename=resultFile);
        resultFile := "Successfully plotted results for file: " + resultFile;

    end plotResult;

    // _____________________________________________
    //
    //               Equations
    // _____________________________________________

      eLIVES eLIVES_L_a(T_max=100, deltaVcrit=0.025*eLIVES_L_a.v_n_prim) annotation (Placement(transformation(extent={{16,-6},{36,14}})));
      eLIVES eLIVES_L1 annotation (Placement(transformation(extent={{-40,-86},{-20,-66}})));
      eLIVES eLIVES_L_b annotation (Placement(transformation(extent={{106,-62},{126,-42}})));
      eLIVES eLIVES_L_c annotation (Placement(transformation(extent={{196,-64},{216,-44}})));
      eLIVES eLIVES_L_2 annotation (Placement(transformation(extent={{256,94},{276,114}})));
    equation

    // _____________________________________________
    //
    //               Connect Statements
    // _____________________________________________

      connect(transmissionLine_Northern_2.epp_n, transmissionLine_Central.epp_p) annotation (Line(
          points={{-20,40},{18,40}},
          color={28,108,200},
          thickness=0.5));
      connect(transmissionLine_CentralFault.epp_p, transmissionLine_Central.epp_p)
        annotation (Line(
          points={{16,74},{6,74},{6,40},{18,40}},
          color={28,108,200},
          thickness=0.5));
      connect(transmissionLine_CentralFault.epp_n, transmissionLine_Central.epp_n)
        annotation (Line(
          points={{36,74},{48,74},{48,40},{38,40}},
          color={28,108,200},
          thickness=0.5));
      connect(transmissionLine_CentralLower_1.epp_p, transmissionLine_Central.epp_n) annotation (Line(
          points={{98,40},{38,40}},
          color={28,108,200},
          thickness=0.5));
      connect(OLTC_L1.RatioOut, Transformer_L1.ratio_set)
        annotation (Line(points={{-92,-50},{-92,-14},{-72,-14}}, color={0,0,127}));
      connect(Transformer_L_a.epp_p, transmissionLine_Central.epp_p) annotation (
          Line(
          points={{-6,12},{-8,12},{-8,40},{18,40}},
          color={28,108,200},
          thickness=0.5));
      connect(OLTC_L_a.RatioOut, Transformer_L_a.ratio_set) annotation (Line(points={{-28,-19},{-40,-19},{-40,8},{-18,8}},
                                                    color={0,0,127}));
      connect(Transformer_L_b.epp_p, transmissionLine_Central.epp_n) annotation (
          Line(
          points={{90,18},{90,40},{38,40}},
          color={28,108,200},
          thickness=0.5));
      connect(Transformer_L_b.epp_n, Lb_DynamicLoad.epp) annotation (Line(
          points={{90,-2},{90,-20},{104,-20}},
          color={28,108,200},
          thickness=0.5));
      connect(OLTC_L_b.epp, Lb_DynamicLoad.epp) annotation (Line(
          points={{82,-21},{82,-20},{104,-20}},
          color={28,108,200},
          thickness=0.5));
      connect(OLTC_L_b.RatioOut, Transformer_L_b.ratio_set) annotation (Line(points={{64,-21},{56,-21},{56,14},{78,14}},
                                                  color={0,0,127}));
      connect(OLTC_L_c.epp, Transformer_L_c.epp_n) annotation (Line(
          points={{154,-19},{162,-19},{162,-8}},
          color={28,108,200},
          thickness=0.5));
      connect(OLTC_L_c.RatioOut, Transformer_L_c.ratio_set)
        annotation (Line(points={{136,-19},{136,8},{150,8}}, color={0,0,127}));
      connect(OLTC_L2.RatioOut, Transformer_L2.ratio_set)
        annotation (Line(points={{256,80},{252,80},{252,52}}, color={0,0,127}));
      connect(Transformer_L2.epp_p, transmissionLine_Southern_2.epp_n) annotation (Line(
          points={{248,40},{232,40}},
          color={28,108,200},
          thickness=0.5));
      connect(const.y, biomass_G1_Slack.P_el_set) annotation (Line(points={{-94.7,
              93},{-104,93},{-104,63.86},{-106.1,63.86}}, color={0,0,127}));
      connect(integrator.y, biomass_G1_Slack.P_SB_set) annotation (Line(points={{-117.2,
              80},{-116.46,80},{-116.46,62.46}}, color={0,0,127}));
      connect(globalFrequency_reference.y, feedback.u1)
        annotation (Line(points={{-107.1,16},{-123.2,16}}, color={0,0,127}));
      connect(globalFrequency.f, feedback.u2) annotation (Line(points={{-116.24,-8},
              {-128,-8},{-128,11.2}}, color={0,0,127}));
      connect(feedback.y, integrator.u) annotation (Line(points={{-133.4,16},{-140,
              16},{-140,80},{-135.6,80}}, color={0,0,127}));
      connect(const1.y, biomass_G3.P_el_set) annotation (Line(points={{101.3,103},{
              100,103},{100,102},{90,102},{90,93.88},{79.8,93.88}},
                                                        color={0,0,127}));
      connect(biomass_G2.epp, transmissionLine_Southern_2.epp_n) annotation (Line(
          points={{222.9,80.7},{236,80.7},{236,40},{232,40}},
          color={28,108,200},
          thickness=0.5));
      connect(const2.y, biomass_G2.P_el_set) annotation (Line(points={{206.7,99},{
              208,99},{208,100},{218,100},{218,83.89},{211.35,83.89}},
                                                      color={0,0,127}));
      connect(BooleanFault.y, not1.u)
        annotation (Line(points={{6.8,100},{12.8,100}}, color={255,0,255}));
      connect(not1.y, transmissionLine_CentralFault.switched_input) annotation (
          Line(points={{26.6,100},{28,100},{28,84},{26,84}}, color={255,0,255}));
      connect(Lc_DynamicLoad.epp, OLTC_L_c.epp) annotation (Line(
          points={{194,-19},{154,-19}},
          color={28,108,200},
          thickness=0.5));
      connect(La_DynamicLoad.epp, Transformer_L_a.epp_n) annotation (Line(
          points={{14,-20},{-6,-20},{-6,-8}},
          color={28,108,200},
          thickness=0.5));
      connect(OLTC_L_a.epp, Transformer_L_a.epp_n) annotation (Line(
          points={{-10,-19},{-10,-19},{-10,-20},{-6,-20},{-6,-8}},
          color={28,108,200},
          thickness=0.5));
      connect(OLTC_L1.epp, L1_DynamicLoad.epp) annotation (Line(
          points={{-74,-50},{-48,-50}},
          color={28,108,200},
          thickness=0.5));
      connect(Transformer_L1.epp_n, L1_DynamicLoad.epp) annotation (Line(
          points={{-60,-30},{-60,-50},{-48,-50}},
          color={28,108,200},
          thickness=0.5));
      connect(L2_DynamicLoad.epp, Transformer_L2.epp_n) annotation (Line(
          points={{296,40},{268,40}},
          color={28,108,200},
          thickness=0.5));
      connect(OLTC_L2.epp, Transformer_L2.epp_n) annotation (Line(
          points={{274,80},{280,80},{280,40},{268,40}},
          color={28,108,200},
          thickness=0.5));
      connect(pQBoundary1.epp, transmissionLine_Central.epp_p) annotation (Line(
          points={{-18,80},{-14,80},{-14,40},{18,40}},
          color={28,108,200},
          thickness=0.5));
      connect(biomass_G3.epp, transmissionLine_Central.epp_n) annotation (Line(
          points={{67.2,90.4},{54,90.4},{54,40},{38,40}},
          color={28,108,200},
          thickness=0.5));
      connect(transmissionLine_CentralLower_2.epp_p, transmissionLine_CentralLower_1.epp_n) annotation (Line(
          points={{134,40},{122,40}},
          color={28,108,200},
          thickness=0.5));
      connect(pQBoundary3.epp, transmissionLine_CentralLower_1.epp_n) annotation (Line(
          points={{132,75},{132,40},{122,40}},
          color={28,108,200},
          thickness=0.5));
      connect(transmissionLine_Northern_2.epp_p, transmissionLine_Northern_1.epp_n) annotation (Line(
          points={{-40,40},{-50,40}},
          color={28,108,200},
          thickness=0.5));
      connect(transmissionLine_Northern_1.epp_p, biomass_G1_Slack.epp) annotation (Line(
          points={{-70,40},{-80,40},{-80,59.8},{-91.4,59.8}},
          color={28,108,200},
          thickness=0.5));
      connect(globalFrequency.epp, biomass_G1_Slack.epp) annotation (Line(
          points={{-104,-8},{-80,-8},{-80,59.8},{-91.4,59.8}},
          color={28,108,200},
          thickness=0.5));
      connect(pQBoundary4.epp, transmissionLine_Northern_1.epp_n) annotation (Line(
          points={{-50,80},{-48,80},{-48,40},{-50,40}},
          color={28,108,200},
          thickness=0.5));
      connect(transmissionLine_Southern_2.epp_p, transmissionLine_Southern_1.epp_n) annotation (Line(
          points={{208,40},{200,40}},
          color={28,108,200},
          thickness=0.5));
      connect(transmissionLine_CentralLower_2.epp_n, transmissionLine_Southern_1.epp_p) annotation (Line(
          points={{158,40},{176,40}},
          color={28,108,200},
          thickness=0.5));
      connect(pQBoundary2.epp, transmissionLine_Southern_1.epp_p) annotation (Line(
          points={{162,79},{164,79},{164,40},{176,40}},
          color={28,108,200},
          thickness=0.5));
      connect(Transformer_L_c.epp_p, transmissionLine_Southern_1.epp_p) annotation (Line(
          points={{162,12},{164,12},{164,40},{176,40}},
          color={28,108,200},
          thickness=0.5));
      connect(pQBoundary5.epp, transmissionLine_Southern_1.epp_n) annotation (Line(
          points={{204,9},{204,40},{200,40}},
          color={28,108,200},
          thickness=0.5));
      connect(Transformer_L1.epp_p, biomass_G1_Slack.epp) annotation (Line(
          points={{-60,-10},{-60,16},{-80,16},{-80,59.8},{-91.4,59.8}},
          color={28,108,200},
          thickness=0.5));
      connect(eLIVES_L_a.epp_sec, Transformer_L_a.epp_n) annotation (Line(
          points={{17.2,-4},{12,-4},{12,-20},{-6,-20},{-6,-8}},
          color={28,108,200},
          thickness=0.5));
      connect(eLIVES_L_a.epp_prim, transmissionLine_Central.epp_p) annotation (Line(
          points={{17.2,4},{6,4},{6,40},{18,40}},
          color={28,108,200},
          thickness=0.5));
      connect(eLIVES_L_a.input_from_OLTC, OLTC_L_a.CurrentTapOut) annotation (Line(points={{16,10},{8,10},{8,-38},{-34,-38},{-34,-25.84},{-28,-25.84}}, color={0,0,127}));
      connect(eLIVES_L1.epp_prim, biomass_G1_Slack.epp) annotation (Line(
          points={{-38.8,-76},{-48,-76},{-48,0},{-60,0},{-60,16},{-80,16},{-80,59.8},{-91.4,59.8}},
          color={28,108,200},
          thickness=0.5));
      connect(eLIVES_L1.epp_sec, L1_DynamicLoad.epp) annotation (Line(
          points={{-38.8,-84},{-50,-84},{-50,-52},{-60,-52},{-60,-50},{-48,-50}},
          color={28,108,200},
          thickness=0.5));
      connect(OLTC_L1.CurrentTapOut, eLIVES_L1.input_from_OLTC) annotation (Line(points={{-92,-56.08},{-66,-56.08},{-66,-70},{-40,-70}}, color={0,0,127}));
      connect(eLIVES_L_b.input_from_OLTC, OLTC_L_b.CurrentTapOut) annotation (Line(points={{106,-46},{84,-46},{84,-27.84},{64,-27.84}}, color={0,0,127}));
      connect(eLIVES_L_b.epp_prim, transmissionLine_Central.epp_n) annotation (Line(
          points={{107.2,-52},{100,-52},{100,26},{90,26},{90,40},{38,40}},
          color={28,108,200},
          thickness=0.5));
      connect(eLIVES_L_b.epp_sec, Lb_DynamicLoad.epp) annotation (Line(
          points={{107.2,-60},{107.2,-20},{104,-20}},
          color={28,108,200},
          thickness=0.5));
      connect(eLIVES_L_c.input_from_OLTC, OLTC_L_c.CurrentTapOut) annotation (Line(points={{196,-48},{166,-48},{166,-25.84},{136,-25.84}}, color={0,0,127}));
      connect(eLIVES_L_c.epp_prim, transmissionLine_Southern_1.epp_p) annotation (Line(
          points={{197.2,-54},{180,-54},{180,22},{164,22},{164,40},{176,40}},
          color={28,108,200},
          thickness=0.5));
      connect(eLIVES_L_c.epp_sec, OLTC_L_c.epp) annotation (Line(
          points={{197.2,-62},{168,-62},{168,-19},{154,-19}},
          color={28,108,200},
          thickness=0.5));
      connect(OLTC_L2.CurrentTapOut, eLIVES_L_2.input_from_OLTC) annotation (Line(points={{256,73.92},{248,73.92},{248,74},{238,74},{238,110},{256,110}}, color={0,0,127}));
      connect(eLIVES_L_2.epp_prim, transmissionLine_Southern_2.epp_n) annotation (Line(
          points={{257.2,104},{230,104},{230,80.7},{236,80.7},{236,40},{232,40}},
          color={28,108,200},
          thickness=0.5));
      connect(eLIVES_L_2.epp_sec, Transformer_L2.epp_n) annotation (Line(
          points={{257.2,96},{257.2,88},{278,88},{278,80},{280,80},{280,40},{268,40}},
          color={28,108,200},
          thickness=0.5));
      annotation (
        Diagram(coordinateSystem(extent={{-160,-100},{320,120}}), graphics={Text(
              extent={{8,24},{54,16}},
              lineColor={28,108,200},
              textString="2 parallel AC lines"),                            Text(
              extent={{-136,122},{-50,112}},
              lineColor={28,108,200},
              textString="N5area Test System (NORDIC 32 adoptation)")}),
        Icon(coordinateSystem(extent={{-160,-100},{320,120}}), graphics={
                                       Ellipse(
              lineColor={0,125,125},
              fillColor={255,255,255},
              fillPattern=FillPattern.Solid,
              extent={{-160,-246},{320,242}}), Polygon(
              points={{-24,-80},{-44,-98},{14,-160},{38,-152},{202,160},{174,172},{32,-166},{-8,-128},{-24,-80}},
              smooth=Smooth.Bezier,
              fillColor={0,124,124},
              fillPattern=FillPattern.Solid,
              pattern=LinePattern.None)}),
        experiment(StopTime=600, __Dymola_Algorithm="Dassl"),Documentation(info="<html>
<p><b><span style=\"font-family: MS Shell Dlg 2; color: #008000;\">1. Purpose of model</span></b></p>
<p><span style=\"font-family: MS Shell Dlg 2;\">Example model for voltage collapse and test of OLTC</span></p>
<p><b><span style=\"font-family: MS Shell Dlg 2; color: #008000;\">2. Level of detail, physical effects considered, and physical insight</span></b></p>
<p><span style=\"font-family: MS Shell Dlg 2;\">Simulation model with full dynamics</span></p>
<p><b><span style=\"font-family: MS Shell Dlg 2; color: #008000;\">3. Limits of validity </span></b></p>
<p><span style=\"font-family: MS Shell Dlg 2;\">Simplified Test grid</span></p>
<p><b><span style=\"font-family: MS Shell Dlg 2; color: #008000;\">4. Interfaces</span></b></p>
<p><span style=\"font-family: MS Shell Dlg 2;\">(no remarks)</span></p>
<p><b><span style=\"font-family: MS Shell Dlg 2; color: #008000;\">5. Nomenclature</span></b></p>
<p><span style=\"font-family: MS Shell Dlg 2;\">(no elements)</span></p>
<p><b><span style=\"font-family: MS Shell Dlg 2; color: #008000;\">6. Governing Equations</span></b></p>
<p><span style=\"font-family: MS Shell Dlg 2;\">(no remarks)</span></p>
<p><b><span style=\"font-family: MS Shell Dlg 2; color: #008000;\">7. Remarks for Usage</span></b></p>
<p><span style=\"font-family: MS Shell Dlg 2;\">(no further remarks)</span></p>
<p><b><span style=\"font-family: MS Shell Dlg 2; color: #008000;\">8. Validation</span></b></p>
<p><span style=\"font-family: MS Shell Dlg 2;\">(no remarks)</span></p>
<p><b><span style=\"font-family: MS Shell Dlg 2; color: #008000;\">9. References</span></b></p>
<p><span style=\"font-family: MS Shell Dlg 2;\">(no remarks)</span></p>
<p><b><span style=\"font-family: MS Shell Dlg 2; color: #008000;\">10. Version History</span></b></p>
<p><span style=\"font-family: MS Shell Dlg 2;\">Model created by Zahra Nadia Faili (zahra.faili@tuhh.de) in July 2019 </span></p>
<p><span style=\"font-family: MS Shell Dlg 2;\">Model revised and added to TransiEnt Library by Jan-Peter Heckel (jan.heckel@tuhh.de) in December 2019 </span></p>
</html>"));
    end CheckeLIVES;

    model CheckeLIVES_Heating

      inner TransiEnt.ModelStatistics modelStatistics annotation (Placement(transformation(extent={{-110,
                -98},{-90,-78}})));

      TransiEnt.Components.Electrical.Grid.PiModelComplex_advanced transmissionLine_Central(
        ChooseVoltageLevel=3,
        p=2,
        MVCableType=TransiEnt.Components.Electrical.Grid.Characteristics.MVCabletypes.L1,
        HVCableType=TransiEnt.Components.Electrical.Grid.Characteristics.HVCabletypes.L6,
        l(displayUnit="km") = 200000)
        annotation (Placement(transformation(extent={{18,30},{38,50}})));

      TransiEnt.Components.Electrical.Grid.PiModelComplex_advanced transmissionLine_CentralFault(
        activateSwitch=true,
        ChooseVoltageLevel=3,
        p=2,
        MVCableType=TransiEnt.Components.Electrical.Grid.Characteristics.MVCabletypes.L1,
        HVCableType=TransiEnt.Components.Electrical.Grid.Characteristics.HVCabletypes.L4,
        l(displayUnit="km") = 200000)
        annotation (Placement(transformation(extent={{16,64},{36,84}})));

      Modelica.Blocks.Sources.BooleanStep  BooleanFault(startTime(displayUnit="s") = 2400400)
        annotation (Placement(transformation(extent={{-10,92},{6,108}})));

      TransiEnt.Components.Electrical.PowerTransformation.SimpleTransformerComplex Transformer_L1(
        UseInput=true,
        U_P(displayUnit="kV") = 380000,
        U_S(displayUnit="kV") = 110000,
        P_p(displayUnit="MW", start=15000000),
        P_n(displayUnit="MW", start=-15000000)) annotation (Placement(
            transformation(
            extent={{10,-10},{-10,10}},
            rotation=90,
            origin={-60,-20})));
      TransiEnt.Components.Electrical.PowerTransformation.OLTC.TapChangerController OLTC_L1(
        numberTaps=11,
        v_prim_n(displayUnit="kV") = 380000,
        v_sec_n(displayUnit="kV") = 110000) annotation (Placement(transformation(extent={{-74,-58},{-92,-42}})));
      TransiEnt.Components.Electrical.PowerTransformation.SimpleTransformerComplex Transformer_L_a(
        UseInput=true,
        U_P(displayUnit="kV") = 380000,
        U_S(displayUnit="kV") = 110000,
        P_p(displayUnit="MW", start=15000000),
        P_n(displayUnit="MW", start=-15000000)) annotation (Placement(
            transformation(
            extent={{10,-10},{-10,10}},
            rotation=90,
            origin={-6,2})));
      OLTC_OutputCurrentTap                                                         OLTC_L_a(
        numberTaps=11,
        v_prim_n(displayUnit="kV") = 380000,
        v_sec_n(displayUnit="kV") = 110000,
        T_delay=10,
        currentTap(start=0)) annotation (Placement(transformation(extent={{-10,-28},{-28,-10}})));
      TransiEnt.Components.Electrical.PowerTransformation.SimpleTransformerComplex Transformer_L_b(
        UseInput=true,
        UseRatio=false,
        U_P(displayUnit="kV") = 380000,
        U_S(displayUnit="kV") = 110000,
        P_p(displayUnit="MW", start=15000000),
        P_n(displayUnit="MW", start=-15000000)) annotation (Placement(
            transformation(
            extent={{10,-10},{-10,10}},
            rotation=90,
            origin={90,8})));
      TransiEnt.Components.Electrical.PowerTransformation.OLTC.TapChangerController OLTC_L_b(
        numberTaps=11,
        v_prim_n(displayUnit="kV") = 380000,
        v_sec_n(displayUnit="kV") = 110000) annotation (Placement(transformation(extent={{82,-30},{64,-12}})));
      TransiEnt.Components.Electrical.PowerTransformation.SimpleTransformerComplex Transformer_L_c(
        UseInput=true,
        U_P(displayUnit="kV") = 380000,
        U_S(displayUnit="kV") = 110000,
        P_p(displayUnit="MW", start=15000000),
        P_n(displayUnit="MW", start=-15000000)) annotation (Placement(
            transformation(
            extent={{10,-10},{-10,10}},
            rotation=90,
            origin={160,2})));
      TransiEnt.Components.Electrical.PowerTransformation.SimpleTransformerComplex Transformer_L2(
        UseInput=true,
        U_P(displayUnit="kV") = 380000,
        U_S(displayUnit="kV") = 110000,
        P_p(displayUnit="MW", start=15000000),
        P_n(displayUnit="MW", start=-15000000)) annotation (Placement(
            transformation(
            extent={{-10,-10},{10,10}},
            rotation=0,
            origin={258,40})));
      TransiEnt.Components.Electrical.PowerTransformation.OLTC.TapChangerController OLTC_L_c(
        numberTaps=11,
        v_prim_n(displayUnit="kV") = 380000,
        v_sec_n(displayUnit="kV") = 110000,
        currentTap(start=0)) annotation (Placement(transformation(extent={{154,-28},{136,-10}})));
      TransiEnt.Components.Electrical.PowerTransformation.OLTC.TapChangerController OLTC_L2(
        numberTaps=11,
        v_prim_n(displayUnit="kV") = 380000,
        v_sec_n(displayUnit="kV") = 110000) annotation (Placement(transformation(extent={{274,72},{256,88}})));
      TransiEnt.Producer.Electrical.Others.Biomass biomass_G1_Slack(
        primaryBalancingController(maxGradientPrCtrl=0.03/30, maxValuePrCtrl=0.03),
        H=11,
        redeclare TransiEnt.Basics.Interfaces.Electrical.ComplexPowerPort epp,
        set_P_init=false,
        isPrimaryControlActive=true,
        P_min_star=0.1,
        redeclare TransiEnt.Components.Electrical.Machines.ExcitationSystemsVoltageController.DCExciter Exciter(
          TA=1,
          KA=80,
          LimitofExcitation=0.6),
        isSecondaryControlActive=true,
        isExternalSecondaryController=true,
        P_el_n(displayUnit="MW") = 3000000000,
        redeclare
          TransiEnt.Components.Electrical.Machines.SynchronousMachineComplex
          Generator(IsSlack=true, R_a=0),
        Turbine(plantDynamic(initOption=3)))
        annotation (Placement(transformation(extent={{-118,36},{-90,64}})));

      Modelica.Blocks.Sources.Constant const(k=-biomass_G1_Slack.P_init)
        annotation (Placement(transformation(extent={{-80,86},{-94,100}})));
      Modelica.Blocks.Continuous.Integrator integrator(k=-1.36e5)
                                                                annotation (Placement(transformation(
            extent={{-8,-8},{8,8}},
            rotation=0,
            origin={-126,80})));
      Modelica.Blocks.Sources.RealExpression globalFrequency_reference(y=simCenter.f_n) annotation (Placement(transformation(extent={{-84,10},
                {-106,22}})));
         TransiEnt.Components.Sensors.ElectricFrequencyComplex globalFrequency annotation (Placement(transformation(extent={{-104,
                -14},{-116,-2}})));
      Modelica.Blocks.Math.Feedback feedback annotation (Placement(transformation(extent={{-122,10},
                {-134,22}})));
      TransiEnt.Producer.Electrical.Others.Biomass biomass_G3(
        primaryBalancingController(maxGradientPrCtrl=0.03/30, maxValuePrCtrl=0.03),
        P_init_set=100e6,
        H=11,
        redeclare TransiEnt.Basics.Interfaces.Electrical.ComplexPowerPort epp,
        set_P_init=true,
        isPrimaryControlActive=true,
        redeclare TransiEnt.Components.Electrical.Machines.ExcitationSystemsVoltageController.DCExciter Exciter(LimitofExcitation=0.5),
        isSecondaryControlActive=false,
        isExternalSecondaryController=true,
        P_el_n(displayUnit="MW") = 250000000,
        redeclare
          TransiEnt.Components.Electrical.Machines.SynchronousMachineComplex
          Generator(R_a=0))
        annotation (Placement(transformation(extent={{90,70},{66,94}})));

      Modelica.Blocks.Sources.Constant const1(k=-biomass_G3.P_init)
                                                                 annotation (Placement(transformation(extent={{116,96},
                {102,110}})));
      TransiEnt.Producer.Electrical.Others.Biomass biomass_G2(
        integrateCDE=true,
        calculateCost=true,
        primaryBalancingController(maxGradientPrCtrl=0.03/30, maxValuePrCtrl=0.03),
        P_init_set=50e6,
        H=11,
        redeclare TransiEnt.Basics.Interfaces.Electrical.ComplexPowerPort epp,
        set_P_init=true,
        isPrimaryControlActive=true,
        redeclare TransiEnt.Components.Electrical.Machines.ExcitationSystemsVoltageController.DCExciter Exciter(LimitofExcitation=0.5),
        isSecondaryControlActive=false,
        isExternalSecondaryController=true,
        P_el_n(displayUnit="MW") = 100000000,
        redeclare
          TransiEnt.Components.Electrical.Machines.SynchronousMachineComplex
          Generator(R_a=0))
        annotation (Placement(transformation(extent={{202,62},{224,84}})));

      Modelica.Blocks.Sources.Constant const2(k=-biomass_G2.P_init)
                                                                 annotation (Placement(transformation(extent={{192,92},
                {206,106}})));
      Modelica.Blocks.Logical.Not not1
        annotation (Placement(transformation(extent={{14,94},{26,106}})));
      TransiEnt.Components.Boundaries.Electrical.ComplexPower.PQBoundary pQBoundary1(
        useInputConnectorP=false,
        useInputConnectorQ=false,
        v_n(displayUnit="kV") = 380000)
                                       annotation (Placement(transformation(extent={{-24,72},{-40,88}})));
      inner TransiEnt.SimCenter simCenter(
        redeclare TILMedia.VLEFluidTypes.TILMedia_SplineWater fluid1,
        v_n(displayUnit="kV") = 380000,
        tableInterpolationSmoothness=Modelica.Blocks.Types.Smoothness.MonotoneContinuousDerivative2,
        ambientConditions(
          redeclare TransiEnt.Basics.Tables.Ambient.Wind_Hamburg_Fuhlsbuettel_3600s_2012 wind,
          redeclare TransiEnt.Basics.Tables.Ambient.GHI_Hamburg_3600s_2012_TMY globalSolarRadiation,
          redeclare TransiEnt.Basics.Tables.Ambient.DNI_Hamburg_3600s_2012_TMY directSolarRadiation,
          redeclare TransiEnt.Basics.Tables.Ambient.DHI_Hamburg_3600s_2012_TMY diffuseSolarRadiation,
          redeclare TransiEnt.Basics.Tables.Ambient.Temperature_Hamburg_900s_2012 temperature),
        integrateHeatFlow=true)                                                                         annotation (Placement(transformation(extent={{-144,-98},{-124,-78}})));
      ResiliEntEE.Experiments.Electrical.N5areaLoadTest.Components.ClaRa_ElectricHeatSystemBoilerImpedance_scaled_comp L1_heating(scalingFactor=30000*1.015, electricBoilerImpedance(v_n=110e3, cosphi=0.866)) annotation (Placement(transformation(extent={{-46,-90},{-26,-70}})));
      ResiliEntEE.Experiments.Electrical.N5areaLoadTest.Components.ClaRa_ElectricHeatSystemBoilerImpedance_scaled_comp La_heating(scalingFactor=1.015*15000, electricBoilerImpedance(v_n=110e3, cosphi=0.866)) annotation (Placement(transformation(extent={{14,-64},{34,-44}})));
      ResiliEntEE.Experiments.Electrical.N5areaLoadTest.Components.ClaRa_ElectricHeatSystemBoilerImpedance_scaled_comp Lb_heating(scalingFactor=1.015*7.64*15000, electricBoilerImpedance(v_n=110e3, cosphi=0.866)) annotation (Placement(transformation(extent={{106,-62},{126,-42}})));
      ResiliEntEE.Experiments.Electrical.N5areaLoadTest.Components.ClaRa_ElectricHeatSystemBoilerImpedance_scaled_comp Lc_heating(scalingFactor=1.015*15000, electricBoilerImpedance(v_n=110e3, cosphi=0.866)) annotation (Placement(transformation(extent={{198,-64},{218,-44}})));
      ResiliEntEE.Experiments.Electrical.N5areaLoadTest.Components.ClaRa_ElectricHeatSystemBoilerImpedance_scaled_comp L2_heating(scalingFactor=1.015*18750, electricBoilerImpedance(v_n=110e3, cosphi=0.866)) annotation (Placement(transformation(extent={{296,-8},{316,12}})));
      TransiEnt.Consumer.Electrical.ExponentialElectricConsumerComplex L1_load(
        P_el_set_const=40.6e6,
        useCosPhi=false,
        Q_el_set=20.3e6,
        v_n=110e3) annotation (Placement(transformation(extent={{-44,-56},{-24,-36}})));
      TransiEnt.Consumer.Electrical.ExponentialElectricConsumerComplex La_load(
        P_el_set_const=20.3e6,
        useCosPhi=false,
        Q_el_set=10.15e6,
        v_n=110e3) annotation (Placement(transformation(extent={{24,-30},{44,-10}})));
      TransiEnt.Consumer.Electrical.ExponentialElectricConsumerComplex Lb_load(
        P_el_set_const=1.015*764e6,
        useCosPhi=false,
        Q_el_set=1.015*382e6,
        v_n=110e3) annotation (Placement(transformation(extent={{104,-28},{124,-8}})));
      TransiEnt.Consumer.Electrical.ExponentialElectricConsumerComplex Lc_load(
        P_el_set_const=1.015*30e6,
        useCosPhi=false,
        Q_el_set=1.015*15e6,
        v_n=110e3) annotation (Placement(transformation(extent={{194,-28},{214,-8}})));
      TransiEnt.Consumer.Electrical.ExponentialElectricConsumerComplex L2_load(
        P_el_set_const=1.015*125e6,
        useCosPhi=false,
        Q_el_set=1.015*75e6,
        v_n=110e3) annotation (Placement(transformation(extent={{298,30},{318,50}})));
      TransiEnt.Components.Electrical.Grid.PiModelComplex_advanced transmissionLine_Northern_2(
        ChooseVoltageLevel=3,
        p=2,
        HVCableType=TransiEnt.Components.Electrical.Grid.Characteristics.HVCabletypes.L6,
        l(displayUnit="km") = 200000) annotation (Placement(transformation(extent={{-40,30},{-20,50}})));
      TransiEnt.Components.Electrical.Grid.PiModelComplex_advanced transmissionLine_Northern_1(
        ChooseVoltageLevel=3,
        p=2,
        HVCableType=TransiEnt.Components.Electrical.Grid.Characteristics.HVCabletypes.L6,
        l(displayUnit="km") = 200000) annotation (Placement(transformation(extent={{-70,30},{-50,50}})));
      TransiEnt.Components.Boundaries.Electrical.ComplexPower.PQBoundary pQBoundary4(
        useInputConnectorP=false,
        useInputConnectorQ=false,
        v_n(displayUnit="kV") = 380000)
                                       annotation (Placement(transformation(extent={{-50,72},{-66,88}})));
      TransiEnt.Components.Electrical.Grid.PiModelComplex_advanced transmissionLine_CentralLower_1(
        activateSwitch=false,
        ChooseVoltageLevel=3,
        p=2,
        LVCableType=TransiEnt.Components.Electrical.Grid.Characteristics.LVCabletypes.K2,
        MVCableType=TransiEnt.Components.Electrical.Grid.Characteristics.MVCabletypes.L1,
        HVCableType=TransiEnt.Components.Electrical.Grid.Characteristics.HVCabletypes.L6,
        l(displayUnit="km") = 300000) annotation (Placement(transformation(extent={{98,28},{122,52}})));
      TransiEnt.Components.Electrical.Grid.PiModelComplex_advanced transmissionLine_CentralLower_2(
        activateSwitch=false,
        ChooseVoltageLevel=3,
        p=2,
        LVCableType=TransiEnt.Components.Electrical.Grid.Characteristics.LVCabletypes.K2,
        MVCableType=TransiEnt.Components.Electrical.Grid.Characteristics.MVCabletypes.L1,
        HVCableType=TransiEnt.Components.Electrical.Grid.Characteristics.HVCabletypes.L6,
        l(displayUnit="km") = 300000) annotation (Placement(transformation(extent={{134,28},{158,52}})));
      TransiEnt.Components.Boundaries.Electrical.ComplexPower.PQBoundary pQBoundary3(
        useInputConnectorP=false,
        useInputConnectorQ=false,
        v_n(displayUnit="kV") = 380000)
                                       annotation (Placement(transformation(extent={{132,68},{118,82}})));
      TransiEnt.Components.Boundaries.Electrical.ComplexPower.PQBoundary pQBoundary5(
        useInputConnectorP=false,
        useInputConnectorQ=false,
        v_n(displayUnit="kV") = 380000)
                                       annotation (Placement(transformation(extent={{162,72},{146,86}})));
      TransiEnt.Components.Electrical.Grid.PiModelComplex_advanced transmissionLine_Southern_2(
        activateSwitch=false,
        ChooseVoltageLevel=3,
        p=2,
        LVCableType=TransiEnt.Components.Electrical.Grid.Characteristics.LVCabletypes.K1,
        MVCableType=TransiEnt.Components.Electrical.Grid.Characteristics.MVCabletypes.L1,
        HVCableType=TransiEnt.Components.Electrical.Grid.Characteristics.HVCabletypes.L6,
        l(displayUnit="km") = 250000) annotation (Placement(transformation(extent={{208,28},{232,52}})));
      TransiEnt.Components.Electrical.Grid.PiModelComplex_advanced transmissionLine_Southern_1(
        activateSwitch=false,
        ChooseVoltageLevel=3,
        p=2,
        LVCableType=TransiEnt.Components.Electrical.Grid.Characteristics.LVCabletypes.K1,
        MVCableType=TransiEnt.Components.Electrical.Grid.Characteristics.MVCabletypes.L1,
        HVCableType=TransiEnt.Components.Electrical.Grid.Characteristics.HVCabletypes.L6,
        l(displayUnit="km") = 250000) annotation (Placement(transformation(extent={{176,28},{200,52}})));
      TransiEnt.Components.Boundaries.Electrical.ComplexPower.PQBoundary pQBoundary2(
        useInputConnectorP=false,
        useInputConnectorQ=false,
        v_n(displayUnit="kV") = 380000)
                                       annotation (Placement(transformation(extent={{204,2},{188,16}})));
      eLIVES eLIVES_L_a(Toff=1500, T_max=1000)
                        annotation (Placement(transformation(extent={{46,-60},{66,-40}})));
    equation
      connect(transmissionLine_CentralFault.epp_p, transmissionLine_Central.epp_p)
        annotation (Line(
          points={{16,74},{6,74},{6,40},{18,40}},
          color={28,108,200},
          thickness=0.5));
      connect(transmissionLine_CentralFault.epp_n, transmissionLine_Central.epp_n)
        annotation (Line(
          points={{36,74},{48,74},{48,40},{38,40}},
          color={28,108,200},
          thickness=0.5));
      connect(OLTC_L1.RatioOut, Transformer_L1.ratio_set)
        annotation (Line(points={{-92,-50},{-92,-14},{-72,-14}}, color={0,0,127}));
      connect(Transformer_L_a.epp_p, transmissionLine_Central.epp_p) annotation (
          Line(
          points={{-6,12},{-8,12},{-8,40},{18,40}},
          color={28,108,200},
          thickness=0.5));
      connect(OLTC_L_a.RatioOut, Transformer_L_a.ratio_set) annotation (Line(points={{-28,-19},{-40,-19},{-40,8},{-18,8}},
                                                    color={0,0,127}));
      connect(Transformer_L_b.epp_p, transmissionLine_Central.epp_n) annotation (
          Line(
          points={{90,18},{90,40},{38,40}},
          color={28,108,200},
          thickness=0.5));
      connect(OLTC_L_b.RatioOut, Transformer_L_b.ratio_set) annotation (Line(points={{64,-21},{56,-21},{56,14},{78,14}},
                                                  color={0,0,127}));
      connect(OLTC_L_c.epp, Transformer_L_c.epp_n) annotation (Line(
          points={{154,-19},{160,-19},{160,-8}},
          color={28,108,200},
          thickness=0.5));
      connect(OLTC_L_c.RatioOut, Transformer_L_c.ratio_set)
        annotation (Line(points={{136,-19},{136,8},{148,8}}, color={0,0,127}));
      connect(OLTC_L2.RatioOut, Transformer_L2.ratio_set)
        annotation (Line(points={{256,80},{252,80},{252,52}}, color={0,0,127}));
      connect(const.y, biomass_G1_Slack.P_el_set) annotation (Line(points={{-94.7,
              93},{-104,93},{-104,63.86},{-106.1,63.86}}, color={0,0,127}));
      connect(integrator.y, biomass_G1_Slack.P_SB_set) annotation (Line(points={{-117.2,
              80},{-116.46,80},{-116.46,62.46}}, color={0,0,127}));
      connect(globalFrequency_reference.y, feedback.u1)
        annotation (Line(points={{-107.1,16},{-123.2,16}}, color={0,0,127}));
      connect(globalFrequency.f, feedback.u2) annotation (Line(points={{-116.24,-8},
              {-128,-8},{-128,11.2}}, color={0,0,127}));
      connect(feedback.y, integrator.u) annotation (Line(points={{-133.4,16},{-140,
              16},{-140,80},{-135.6,80}}, color={0,0,127}));
      connect(const1.y, biomass_G3.P_el_set) annotation (Line(points={{101.3,103},{
              100,103},{100,102},{90,102},{90,93.88},{79.8,93.88}},
                                                        color={0,0,127}));
      connect(const2.y, biomass_G2.P_el_set) annotation (Line(points={{206.7,99},{
              208,99},{208,100},{218,100},{218,83.89},{211.35,83.89}},
                                                      color={0,0,127}));
      connect(BooleanFault.y, not1.u)
        annotation (Line(points={{6.8,100},{12.8,100}}, color={255,0,255}));
      connect(not1.y, transmissionLine_CentralFault.switched_input) annotation (
          Line(points={{26.6,100},{28,100},{28,84},{26,84}}, color={255,0,255}));
      connect(OLTC_L_a.epp, Transformer_L_a.epp_n) annotation (Line(
          points={{-10,-19},{-10,-19},{-10,-20},{-6,-20},{-6,-8}},
          color={28,108,200},
          thickness=0.5));
      connect(OLTC_L2.epp, Transformer_L2.epp_n) annotation (Line(
          points={{274,80},{280,80},{280,40},{268,40}},
          color={28,108,200},
          thickness=0.5));
      connect(pQBoundary1.epp, transmissionLine_Central.epp_p) annotation (Line(
          points={{-24,80},{-14,80},{-14,40},{18,40}},
          color={28,108,200},
          thickness=0.5));
      connect(biomass_G3.epp, transmissionLine_Central.epp_n) annotation (Line(
          points={{67.2,90.4},{54,90.4},{54,40},{38,40}},
          color={28,108,200},
          thickness=0.5));
      connect(La_heating.epp, Transformer_L_a.epp_n) annotation (Line(
          points={{14,-54},{-6,-54},{-6,-8}},
          color={28,108,200},
          thickness=0.5));
      connect(Lc_heating.epp, Transformer_L_c.epp_n) annotation (Line(
          points={{198,-54},{160,-54},{160,-8}},
          color={28,108,200},
          thickness=0.5));
      connect(L2_heating.epp, Transformer_L2.epp_n) annotation (Line(
          points={{296,2},{280,2},{280,40},{268,40}},
          color={28,108,200},
          thickness=0.5));
      connect(Transformer_L1.epp_n, OLTC_L1.epp) annotation (Line(
          points={{-60,-30},{-62,-30},{-62,-50},{-74,-50}},
          color={28,108,200},
          thickness=0.5));
      connect(L1_heating.epp, OLTC_L1.epp) annotation (Line(
          points={{-46,-80},{-62,-80},{-62,-50},{-74,-50}},
          color={28,108,200},
          thickness=0.5));
      connect(L1_load.epp, OLTC_L1.epp) annotation (Line(
          points={{-43.8,-46},{-62,-46},{-62,-50},{-74,-50}},
          color={28,108,200},
          thickness=0.5));
      connect(La_load.epp, Transformer_L_a.epp_n) annotation (Line(
          points={{24.2,-20},{-6,-20},{-6,-8}},
          color={28,108,200},
          thickness=0.5));
      connect(Lb_load.epp, OLTC_L_b.epp) annotation (Line(
          points={{104.2,-18},{94,-18},{94,-21},{82,-21}},
          color={28,108,200},
          thickness=0.5));
      connect(Transformer_L_b.epp_n, OLTC_L_b.epp) annotation (Line(
          points={{90,-2},{90,-20},{88,-20},{88,-21},{82,-21}},
          color={28,108,200},
          thickness=0.5));
      connect(Lb_heating.epp, OLTC_L_b.epp) annotation (Line(
          points={{106,-52},{90,-52},{90,-21},{82,-21}},
          color={28,108,200},
          thickness=0.5));
      connect(Lc_load.epp, Transformer_L_c.epp_n) annotation (Line(
          points={{194.2,-18},{160,-18},{160,-8}},
          color={28,108,200},
          thickness=0.5));
      connect(L2_load.epp, Transformer_L2.epp_n) annotation (Line(
          points={{298.2,40},{268,40}},
          color={28,108,200},
          thickness=0.5));
      connect(transmissionLine_Northern_2.epp_p,transmissionLine_Northern_1. epp_n) annotation (Line(
          points={{-40,40},{-50,40}},
          color={28,108,200},
          thickness=0.5));
      connect(transmissionLine_Northern_1.epp_p, biomass_G1_Slack.epp) annotation (Line(
          points={{-70,40},{-80,40},{-80,59.8},{-91.4,59.8}},
          color={28,108,200},
          thickness=0.5));
      connect(pQBoundary4.epp,transmissionLine_Northern_1. epp_n) annotation (Line(
          points={{-50,80},{-48,80},{-48,40},{-50,40}},
          color={28,108,200},
          thickness=0.5));
      connect(transmissionLine_Northern_2.epp_n, transmissionLine_Central.epp_p) annotation (Line(
          points={{-20,40},{-16,40},{-16,42},{-14,42},{-14,40},{18,40}},
          color={28,108,200},
          thickness=0.5));
      connect(Transformer_L1.epp_p, biomass_G1_Slack.epp) annotation (Line(
          points={{-60,-10},{-60,0},{-80,0},{-80,59.8},{-91.4,59.8}},
          color={28,108,200},
          thickness=0.5));
      connect(globalFrequency.epp, biomass_G1_Slack.epp) annotation (Line(
          points={{-104,-8},{-92,-8},{-92,0},{-80,0},{-80,59.8},{-91.4,59.8}},
          color={28,108,200},
          thickness=0.5));
      connect(transmissionLine_CentralLower_2.epp_p,transmissionLine_CentralLower_1. epp_n) annotation (Line(
          points={{134,40},{122,40}},
          color={28,108,200},
          thickness=0.5));
      connect(pQBoundary3.epp,transmissionLine_CentralLower_1. epp_n) annotation (Line(
          points={{132,75},{132,40},{122,40}},
          color={28,108,200},
          thickness=0.5));
      connect(transmissionLine_CentralLower_1.epp_p, transmissionLine_Central.epp_n) annotation (Line(
          points={{98,40},{38,40}},
          color={28,108,200},
          thickness=0.5));
      connect(pQBoundary2.epp,transmissionLine_Southern_1. epp_n) annotation (Line(
          points={{204,9},{204,40},{200,40}},
          color={28,108,200},
          thickness=0.5));
      connect(transmissionLine_CentralLower_2.epp_n, transmissionLine_Southern_1.epp_p) annotation (Line(
          points={{158,40},{176,40}},
          color={28,108,200},
          thickness=0.5));
      connect(transmissionLine_Southern_2.epp_n, Transformer_L2.epp_p) annotation (Line(
          points={{232,40},{248,40}},
          color={28,108,200},
          thickness=0.5));
      connect(pQBoundary5.epp, transmissionLine_Southern_1.epp_p) annotation (Line(
          points={{162,79},{164,79},{164,40},{176,40}},
          color={28,108,200},
          thickness=0.5));
      connect(Transformer_L_c.epp_p, transmissionLine_Southern_1.epp_p) annotation (Line(
          points={{160,12},{162,12},{162,40},{176,40}},
          color={28,108,200},
          thickness=0.5));
      connect(biomass_G2.epp, Transformer_L2.epp_p) annotation (Line(
          points={{222.9,80.7},{240,80.7},{240,40},{248,40}},
          color={28,108,200},
          thickness=0.5));
      connect(transmissionLine_Southern_2.epp_p, transmissionLine_Southern_1.epp_n) annotation (Line(
          points={{208,40},{200,40}},
          color={28,108,200},
          thickness=0.5));
      connect(OLTC_L_a.CurrentTapOut, eLIVES_L_a.input_from_OLTC) annotation (Line(points={{-28,-25.84},{9,-25.84},{9,-44},{46,-44}}, color={0,0,127}));
      connect(eLIVES_L_a.epp_prim, transmissionLine_Central.epp_p) annotation (Line(
          points={{47.2,-50},{20,-50},{20,24},{-8,24},{-8,40},{18,40}},
          color={28,108,200},
          thickness=0.5));
      connect(eLIVES_L_a.epp_sec, Transformer_L_a.epp_n) annotation (Line(
          points={{47.2,-58},{40,-58},{40,-80},{-6,-80},{-6,-8}},
          color={28,108,200},
          thickness=0.5));
      annotation (
        Diagram(coordinateSystem(extent={{-160,-100},{320,120}}), graphics={Text(
              extent={{6,26},{52,18}},
              lineColor={28,108,200},
              textString="2 parallel AC lines"),                            Text(
              extent={{-136,122},{-50,112}},
              lineColor={28,108,200},
              textString="N5area Test System (NORDIC 32 adoptation)")}),
        Icon(coordinateSystem(extent={{-160,-100},{320,120}}), graphics={
                                       Ellipse(
              lineColor={0,125,125},
              fillColor={255,255,255},
              fillPattern=FillPattern.Solid,
              extent={{-136,-234},{344,254}}), Polygon(
              points={{0,-68},{-20,-86},{38,-148},{62,-140},{226,172},{198,184},{56,-154},{16,-116},{0,-68}},
              smooth=Smooth.Bezier,
              fillColor={0,124,124},
              fillPattern=FillPattern.Solid,
              pattern=LinePattern.None)}),
        experiment(
          StartTime=2360000,
          StopTime=2402000,
          Interval=1,
          __Dymola_Algorithm="Dassl"),
        Diagram(coordinateSystem(extent={{-160,-100},{320,120}}), graphics={Text(
              extent={{6,26},{52,18}},
              lineColor={28,108,200},
              textString="2 parallel AC lines"),                            Text(
              extent={{-136,122},{-50,112}},
              lineColor={28,108,200},
              textString="N5area Test System (NORDIC 32 adoptation)")}),
        Icon(coordinateSystem(extent={{-160,-100},{320,120}})),
        experiment(
          StartTime=2360000,
          StopTime=2401500,
          Interval=1,
          __Dymola_Algorithm="Dassl"));
    end CheckeLIVES_Heating;

    model CheckeLIVES_Heatpump

      inner TransiEnt.ModelStatistics modelStatistics annotation (Placement(transformation(extent={{-114,-98},{-94,-78}})));
    public
      TransiEnt.Components.Electrical.Grid.PiModelComplex_advanced transmissionLine_Central(
        ChooseVoltageLevel=3,
        p=2,
        MVCableType=TransiEnt.Components.Electrical.Grid.Characteristics.MVCabletypes.L1,
        HVCableType=TransiEnt.Components.Electrical.Grid.Characteristics.HVCabletypes.L6,
        l(displayUnit="km") = 200000)
        annotation (Placement(transformation(extent={{14,30},{34,50}})));
    protected
      TransiEnt.Components.Electrical.Grid.PiModelComplex_advanced transmissionLine_CentralFault(
        activateSwitch=true,
        ChooseVoltageLevel=3,
        p=2,
        MVCableType=TransiEnt.Components.Electrical.Grid.Characteristics.MVCabletypes.L1,
        HVCableType=TransiEnt.Components.Electrical.Grid.Characteristics.HVCabletypes.L4,
        l(displayUnit="km") = 200000)
        annotation (Placement(transformation(extent={{12,64},{32,84}})));
    public
      Modelica.Blocks.Sources.BooleanStep  BooleanFault(startTime(displayUnit="s") = 2.225e6)
        annotation (Placement(transformation(extent={{-26,92},{-10,108}})));
      TransiEnt.Components.Electrical.PowerTransformation.SimpleTransformerComplex Transformer_L1(
        UseInput=true,
        U_P(displayUnit="kV") = 380000,
        U_S(displayUnit="kV") = 110000,
        P_p(displayUnit="MW", start=15000000),
        P_n(displayUnit="MW", start=-15000000)) annotation (Placement(
            transformation(
            extent={{10,-10},{-10,10}},
            rotation=90,
            origin={-64,-20})));
      TransiEnt.Components.Electrical.PowerTransformation.OLTC.TapChangerController OLTC_L1(
        numberTaps=11,
        v_prim_n(displayUnit="kV") = 380000,
        v_sec_n(displayUnit="kV") = 110000) annotation (Placement(transformation(extent={{-78,-58},{-96,-42}})));
      TransiEnt.Components.Electrical.PowerTransformation.SimpleTransformerComplex Transformer_L_a(
        UseInput=true,
        U_P(displayUnit="kV") = 380000,
        U_S(displayUnit="kV") = 110000,
        P_p(displayUnit="MW", start=15000000),
        P_n(displayUnit="MW", start=-15000000)) annotation (Placement(
            transformation(
            extent={{10,-10},{-10,10}},
            rotation=90,
            origin={-10,2})));
      OLTC_OutputCurrentTap                                                         OLTC_L_a(
        numberTaps=11,
        v_prim_n(displayUnit="kV") = 380000,
        v_sec_n(displayUnit="kV") = 110000,
        T_delay=10,
        currentTap(start=0)) annotation (Placement(transformation(extent={{-14,-28},{-32,-10}})));
      TransiEnt.Components.Electrical.PowerTransformation.SimpleTransformerComplex Transformer_L_b(
        UseInput=true,
        UseRatio=false,
        U_P(displayUnit="kV") = 380000,
        U_S(displayUnit="kV") = 110000,
        P_p(displayUnit="MW", start=15000000),
        P_n(displayUnit="MW", start=-15000000)) annotation (Placement(
            transformation(
            extent={{10,-10},{-10,10}},
            rotation=90,
            origin={86,8})));
      TransiEnt.Components.Electrical.PowerTransformation.OLTC.TapChangerController OLTC_L_b(
        numberTaps=11,
        v_prim_n(displayUnit="kV") = 380000,
        v_sec_n(displayUnit="kV") = 110000) annotation (Placement(transformation(extent={{78,-30},{60,-12}})));
    protected
      TransiEnt.Components.Electrical.PowerTransformation.SimpleTransformerComplex Transformer_L_c(
        UseInput=true,
        U_P(displayUnit="kV") = 380000,
        U_S(displayUnit="kV") = 110000,
        P_p(displayUnit="MW", start=15000000),
        P_n(displayUnit="MW", start=-15000000)) annotation (Placement(
            transformation(
            extent={{10,-10},{-10,10}},
            rotation=90,
            origin={156,2})));
      TransiEnt.Components.Electrical.PowerTransformation.SimpleTransformerComplex Transformer_L2(
        UseInput=true,
        U_P(displayUnit="kV") = 380000,
        U_S(displayUnit="kV") = 110000,
        P_p(displayUnit="MW", start=15000000),
        P_n(displayUnit="MW", start=-15000000)) annotation (Placement(
            transformation(
            extent={{-10,-10},{10,10}},
            rotation=0,
            origin={254,40})));
    public
      TransiEnt.Components.Electrical.PowerTransformation.OLTC.TapChangerController OLTC_L_c(
        numberTaps=11,
        v_prim_n(displayUnit="kV") = 380000,
        v_sec_n(displayUnit="kV") = 110000,
        currentTap(start=0)) annotation (Placement(transformation(extent={{150,-28},{132,-10}})));
      TransiEnt.Components.Electrical.PowerTransformation.OLTC.TapChangerController OLTC_L2(
        numberTaps=11,
        v_prim_n(displayUnit="kV") = 380000,
        v_sec_n(displayUnit="kV") = 110000) annotation (Placement(transformation(extent={{270,72},{252,88}})));
    public
      TransiEnt.Producer.Electrical.Others.Biomass biomass_G1_Slack(
        primaryBalancingController(maxGradientPrCtrl=0.03/30, maxValuePrCtrl=0.03),
        H=11,
        redeclare TransiEnt.Basics.Interfaces.Electrical.ComplexPowerPort epp,
        set_P_init=false,
        isPrimaryControlActive=true,
        P_min_star=0.1,
        redeclare TransiEnt.Components.Electrical.Machines.ExcitationSystemsVoltageController.DCExciter Exciter(
          TA=1,
          KA=80,
          LimitofExcitation=0.6),
        isSecondaryControlActive=true,
        isExternalSecondaryController=true,
        P_el_n(displayUnit="MW") = 3000000000,
        redeclare TransiEnt.Components.Electrical.Machines.SynchronousMachineComplex Generator(IsSlack=true, R_a=0),
        Turbine(plantDynamic(initOption=3)))
        annotation (Placement(transformation(extent={{-122,36},{-94,64}})));
    public
      Modelica.Blocks.Sources.Constant const(k=-biomass_G1_Slack.P_init)
        annotation (Placement(transformation(extent={{-84,86},{-98,100}})));
      Modelica.Blocks.Continuous.Integrator integrator(k=-1.36e6)
                                                                annotation (Placement(transformation(
            extent={{-8,-8},{8,8}},
            rotation=0,
            origin={-130,80})));
      Modelica.Blocks.Sources.RealExpression globalFrequency_reference(y=simCenter.f_n) annotation (Placement(transformation(extent={{-88,10},{-110,22}})));
         TransiEnt.Components.Sensors.ElectricFrequencyComplex globalFrequency annotation (Placement(transformation(extent={{-108,-14},{-120,-2}})));
      Modelica.Blocks.Math.Feedback feedback annotation (Placement(transformation(extent={{-126,10},{-138,22}})));
    public
      TransiEnt.Producer.Electrical.Others.Biomass biomass_G3(
        primaryBalancingController(maxGradientPrCtrl=0.03/30, maxValuePrCtrl=0.03),
        P_init_set=100e6,
        H=11,
        redeclare TransiEnt.Basics.Interfaces.Electrical.ComplexPowerPort epp,
        set_P_init=true,
        isPrimaryControlActive=true,
        redeclare TransiEnt.Components.Electrical.Machines.ExcitationSystemsVoltageController.DCExciter Exciter(LimitofExcitation=0.5),
        isSecondaryControlActive=false,
        isExternalSecondaryController=true,
        P_el_n(displayUnit="MW") = 250000000,
        redeclare TransiEnt.Components.Electrical.Machines.SynchronousMachineComplex Generator(R_a=0))
        annotation (Placement(transformation(extent={{86,70},{62,94}})));
    public
      Modelica.Blocks.Sources.Constant const1(k=-biomass_G3.P_init)
                                                                 annotation (Placement(transformation(extent={{112,96},{98,110}})));
    public
      TransiEnt.Producer.Electrical.Others.Biomass biomass_G2(
        integrateCDE=true,
        calculateCost=true,
        primaryBalancingController(maxGradientPrCtrl=0.03/30, maxValuePrCtrl=0.03),
        P_init_set=50e6,
        H=11,
        redeclare TransiEnt.Basics.Interfaces.Electrical.ComplexPowerPort epp,
        set_P_init=true,
        isPrimaryControlActive=true,
        redeclare TransiEnt.Components.Electrical.Machines.ExcitationSystemsVoltageController.DCExciter Exciter(LimitofExcitation=0.5),
        isSecondaryControlActive=false,
        isExternalSecondaryController=true,
        P_el_n(displayUnit="MW") = 100000000,
        redeclare TransiEnt.Components.Electrical.Machines.SynchronousMachineComplex Generator(R_a=0))
        annotation (Placement(transformation(extent={{198,62},{220,84}})));
    public
      Modelica.Blocks.Sources.Constant const2(k=-biomass_G2.P_init)
                                                                 annotation (Placement(transformation(extent={{188,92},{202,106}})));
      Modelica.Blocks.Logical.Not not1
        annotation (Placement(transformation(extent={{0,94},{12,106}})));
    protected
      TransiEnt.Components.Boundaries.Electrical.ComplexPower.PQBoundary pQBoundary1(
        useInputConnectorP=false,
        useInputConnectorQ=false,
        v_n(displayUnit="kV") = 380000)
                                       annotation (Placement(transformation(extent={{-28,72},{-44,88}})));
    public
      inner TransiEnt.SimCenter simCenter(
        redeclare TILMedia.VLEFluidTypes.TILMedia_SplineWater fluid1,
        v_n(displayUnit="kV") = 380000,
        tableInterpolationSmoothness=Modelica.Blocks.Types.Smoothness.MonotoneContinuousDerivative2,
        ambientConditions(
          redeclare TransiEnt.Basics.Tables.Ambient.Wind_Hamburg_Fuhlsbuettel_3600s_2012 wind,
          redeclare TransiEnt.Basics.Tables.Ambient.GHI_Hamburg_3600s_2012_TMY globalSolarRadiation,
          redeclare TransiEnt.Basics.Tables.Ambient.DNI_Hamburg_3600s_2012_TMY directSolarRadiation,
          redeclare TransiEnt.Basics.Tables.Ambient.DHI_Hamburg_3600s_2012_TMY diffuseSolarRadiation,
          redeclare TransiEnt.Basics.Tables.Ambient.Temperature_Hamburg_900s_2012 temperature),
        integrateHeatFlow=true)                                                                         annotation (Placement(transformation(extent={{-148,-98},{-128,-78}})));
    public
      TransiEnt.Consumer.Electrical.ExponentialElectricConsumerComplex L1_load(
        P_el_set_const=40.6e6,
        useCosPhi=false,
        Q_el_set=20.3e6,
        v_n=110e3) annotation (Placement(transformation(extent={{-48,-56},{-28,-36}})));
      TransiEnt.Consumer.Electrical.ExponentialElectricConsumerComplex La_load(
        P_el_set_const=20.3e6,
        useCosPhi=false,
        Q_el_set=10.15e6,
        v_n=110e3) annotation (Placement(transformation(extent={{12,-30},{32,-10}})));
      TransiEnt.Consumer.Electrical.ExponentialElectricConsumerComplex Lb_load(
        P_el_set_const=1.02*764e6,
        useCosPhi=false,
        Q_el_set=1.02*382e6,
        v_n=110e3) annotation (Placement(transformation(extent={{100,-28},{120,-8}})));
      TransiEnt.Consumer.Electrical.ExponentialElectricConsumerComplex Lc_load(
        P_el_set_const=1.015*30e6,
        useCosPhi=false,
        Q_el_set=1.015*15e6,
        v_n=110e3) annotation (Placement(transformation(extent={{190,-28},{210,-8}})));
      TransiEnt.Consumer.Electrical.ExponentialElectricConsumerComplex L2_load(
        P_el_set_const=1.015*125e6,
        useCosPhi=false,
        Q_el_set=1.015*75e6,
        v_n=110e3) annotation (Placement(transformation(extent={{294,30},{314,50}})));
    protected
      TransiEnt.Components.Electrical.Grid.PiModelComplex_advanced transmissionLine_Northern_2(
        ChooseVoltageLevel=3,
        p=2,
        HVCableType=TransiEnt.Components.Electrical.Grid.Characteristics.HVCabletypes.L6,
        l(displayUnit="km") = 200000) annotation (Placement(transformation(extent={{-44,30},{-24,50}})));
      TransiEnt.Components.Electrical.Grid.PiModelComplex_advanced transmissionLine_Northern_1(
        ChooseVoltageLevel=3,
        p=2,
        HVCableType=TransiEnt.Components.Electrical.Grid.Characteristics.HVCabletypes.L6,
        l(displayUnit="km") = 200000) annotation (Placement(transformation(extent={{-74,30},{-54,50}})));
      TransiEnt.Components.Boundaries.Electrical.ComplexPower.PQBoundary pQBoundary4(
        useInputConnectorP=false,
        useInputConnectorQ=false,
        v_n(displayUnit="kV") = 380000)
                                       annotation (Placement(transformation(extent={{-54,72},{-70,88}})));
      TransiEnt.Components.Electrical.Grid.PiModelComplex_advanced transmissionLine_CentralLower_1(
        activateSwitch=false,
        ChooseVoltageLevel=3,
        p=2,
        LVCableType=TransiEnt.Components.Electrical.Grid.Characteristics.LVCabletypes.K2,
        MVCableType=TransiEnt.Components.Electrical.Grid.Characteristics.MVCabletypes.L1,
        HVCableType=TransiEnt.Components.Electrical.Grid.Characteristics.HVCabletypes.L6,
        l(displayUnit="km") = 300000) annotation (Placement(transformation(extent={{94,28},{118,52}})));
      TransiEnt.Components.Electrical.Grid.PiModelComplex_advanced transmissionLine_CentralLower_2(
        activateSwitch=false,
        ChooseVoltageLevel=3,
        p=2,
        LVCableType=TransiEnt.Components.Electrical.Grid.Characteristics.LVCabletypes.K2,
        MVCableType=TransiEnt.Components.Electrical.Grid.Characteristics.MVCabletypes.L1,
        HVCableType=TransiEnt.Components.Electrical.Grid.Characteristics.HVCabletypes.L6,
        l(displayUnit="km") = 300000) annotation (Placement(transformation(extent={{130,28},{154,52}})));
      TransiEnt.Components.Boundaries.Electrical.ComplexPower.PQBoundary pQBoundary3(
        useInputConnectorP=false,
        useInputConnectorQ=false,
        v_n(displayUnit="kV") = 380000)
                                       annotation (Placement(transformation(extent={{128,68},{114,82}})));
      TransiEnt.Components.Boundaries.Electrical.ComplexPower.PQBoundary pQBoundary5(
        useInputConnectorP=false,
        useInputConnectorQ=false,
        v_n(displayUnit="kV") = 380000)
                                       annotation (Placement(transformation(extent={{158,72},{142,86}})));
      TransiEnt.Components.Electrical.Grid.PiModelComplex_advanced transmissionLine_Southern_2(
        activateSwitch=false,
        ChooseVoltageLevel=3,
        p=2,
        LVCableType=TransiEnt.Components.Electrical.Grid.Characteristics.LVCabletypes.K1,
        MVCableType=TransiEnt.Components.Electrical.Grid.Characteristics.MVCabletypes.L1,
        HVCableType=TransiEnt.Components.Electrical.Grid.Characteristics.HVCabletypes.L6,
        l(displayUnit="km") = 250000) annotation (Placement(transformation(extent={{204,28},{228,52}})));
      TransiEnt.Components.Electrical.Grid.PiModelComplex_advanced transmissionLine_Southern_1(
        activateSwitch=false,
        ChooseVoltageLevel=3,
        p=2,
        LVCableType=TransiEnt.Components.Electrical.Grid.Characteristics.LVCabletypes.K1,
        MVCableType=TransiEnt.Components.Electrical.Grid.Characteristics.MVCabletypes.L1,
        HVCableType=TransiEnt.Components.Electrical.Grid.Characteristics.HVCabletypes.L6,
        l(displayUnit="km") = 250000) annotation (Placement(transformation(extent={{172,28},{196,52}})));
    public
      TransiEnt.Components.Boundaries.Electrical.ComplexPower.PQBoundary pQBoundary2(
        useInputConnectorP=false,
        useInputConnectorQ=false,
        v_n(displayUnit="kV") = 380000)
                                       annotation (Placement(transformation(extent={{200,2},{184,16}})));
    public
      ResiliEntEE.Experiments.Electrical.N5areaLoadTest.Components.ClaRa_HeatpumpCharline_Speicher_Ideal L1_heating(scalingFactor=1.015*30000, heatPumpElectricCharlineDG(powerBoundary(cosphi_boundary=0.9))) annotation (Placement(transformation(extent={{-58,-82},{-30,-62}})));
    public
      ResiliEntEE.Experiments.Electrical.N5areaLoadTest.Components.ClaRa_HeatpumpCharline_Speicher_Ideal La_heating(scalingFactor=1.015*15000, heatPumpElectricCharlineDG(powerBoundary(cosphi_boundary=0.9))) annotation (Placement(transformation(extent={{10,-58},{38,-38}})));
    public
      ResiliEntEE.Experiments.Electrical.N5areaLoadTest.Components.ClaRa_HeatpumpCharline_Speicher_Ideal Lb_heating(scalingFactor=1.02*7.64*15000, heatPumpElectricCharlineDG(powerBoundary(cosphi_boundary=0.9))) annotation (Placement(transformation(extent={{94,-62},{122,-42}})));
      ResiliEntEE.Experiments.Electrical.N5areaLoadTest.Components.ClaRa_HeatpumpCharline_Speicher_Ideal Lc_heating(scalingFactor=1.015*15000, heatPumpElectricCharlineDG(powerBoundary(cosphi_boundary=0.9))) annotation (Placement(transformation(extent={{176,-72},{204,-52}})));
      ResiliEntEE.Experiments.Electrical.N5areaLoadTest.Components.ClaRa_HeatpumpCharline_Speicher_Ideal L2_heating(scalingFactor=1.015*18750, heatPumpElectricCharlineDG(powerBoundary(cosphi_boundary=0.9))) annotation (Placement(transformation(extent={{280,-14},{308,6}})));
      eLIVES eLIVES_L_a(Toff=1500, T_max=1000)
                        annotation (Placement(transformation(extent={{40,-72},{60,-52}})));
    equation
      connect(transmissionLine_CentralFault.epp_p,transmissionLine_Central. epp_p)
        annotation (Line(
          points={{12,74},{2,74},{2,40},{14,40}},
          color={28,108,200},
          thickness=0.5));
      connect(transmissionLine_CentralFault.epp_n,transmissionLine_Central. epp_n)
        annotation (Line(
          points={{32,74},{44,74},{44,40},{34,40}},
          color={28,108,200},
          thickness=0.5));
      connect(OLTC_L1.RatioOut,Transformer_L1. ratio_set)
        annotation (Line(points={{-96,-50},{-96,-14},{-76,-14}}, color={0,0,127}));
      connect(Transformer_L_a.epp_p,transmissionLine_Central. epp_p) annotation (
          Line(
          points={{-10,12},{-12,12},{-12,40},{14,40}},
          color={28,108,200},
          thickness=0.5));
      connect(OLTC_L_a.RatioOut,Transformer_L_a. ratio_set) annotation (Line(points={{-32,-19},{-44,-19},{-44,8},{-22,8}},
                                                    color={0,0,127}));
      connect(Transformer_L_b.epp_p,transmissionLine_Central. epp_n) annotation (
          Line(
          points={{86,18},{86,40},{34,40}},
          color={28,108,200},
          thickness=0.5));
      connect(OLTC_L_b.RatioOut,Transformer_L_b. ratio_set) annotation (Line(points={{60,-21},{52,-21},{52,14},{74,14}},
                                                  color={0,0,127}));
      connect(OLTC_L_c.epp,Transformer_L_c. epp_n) annotation (Line(
          points={{150,-19},{156,-19},{156,-8}},
          color={28,108,200},
          thickness=0.5));
      connect(OLTC_L_c.RatioOut,Transformer_L_c. ratio_set)
        annotation (Line(points={{132,-19},{132,8},{144,8}}, color={0,0,127}));
      connect(OLTC_L2.RatioOut,Transformer_L2. ratio_set)
        annotation (Line(points={{252,80},{248,80},{248,52}}, color={0,0,127}));
      connect(const.y,biomass_G1_Slack. P_el_set) annotation (Line(points={{-98.7,93},{-108,93},{-108,63.86},{-110.1,63.86}},
                                                          color={0,0,127}));
      connect(integrator.y,biomass_G1_Slack. P_SB_set) annotation (Line(points={{-121.2,80},{-120.46,80},{-120.46,62.46}},
                                                 color={0,0,127}));
      connect(globalFrequency_reference.y,feedback. u1)
        annotation (Line(points={{-111.1,16},{-127.2,16}}, color={0,0,127}));
      connect(globalFrequency.f,feedback. u2) annotation (Line(points={{-120.24,-8},{-132,-8},{-132,11.2}},
                                      color={0,0,127}));
      connect(feedback.y,integrator. u) annotation (Line(points={{-137.4,16},{-144,16},{-144,80},{-139.6,80}},
                                          color={0,0,127}));
      connect(const1.y,biomass_G3. P_el_set) annotation (Line(points={{97.3,103},{96,103},{96,102},{86,102},{86,93.88},{75.8,93.88}},
                                                        color={0,0,127}));
      connect(const2.y,biomass_G2. P_el_set) annotation (Line(points={{202.7,99},{204,99},{204,100},{214,100},{214,83.89},{207.35,83.89}},
                                                      color={0,0,127}));
      connect(BooleanFault.y,not1. u)
        annotation (Line(points={{-9.2,100},{-1.2,100}},color={255,0,255}));
      connect(not1.y,transmissionLine_CentralFault. switched_input) annotation (
          Line(points={{12.6,100},{22,100},{22,84}},         color={255,0,255}));
      connect(OLTC_L_a.epp,Transformer_L_a. epp_n) annotation (Line(
          points={{-14,-19},{-14,-20},{-10,-20},{-10,-8}},
          color={28,108,200},
          thickness=0.5));
      connect(OLTC_L2.epp,Transformer_L2. epp_n) annotation (Line(
          points={{270,80},{276,80},{276,40},{264,40}},
          color={28,108,200},
          thickness=0.5));
      connect(pQBoundary1.epp,transmissionLine_Central. epp_p) annotation (Line(
          points={{-28,80},{-18,80},{-18,40},{14,40}},
          color={28,108,200},
          thickness=0.5));
      connect(biomass_G3.epp,transmissionLine_Central. epp_n) annotation (Line(
          points={{63.2,90.4},{50,90.4},{50,40},{34,40}},
          color={28,108,200},
          thickness=0.5));
      connect(Transformer_L1.epp_n,OLTC_L1. epp) annotation (Line(
          points={{-64,-30},{-66,-30},{-66,-50},{-78,-50}},
          color={28,108,200},
          thickness=0.5));
      connect(L1_load.epp,OLTC_L1. epp) annotation (Line(
          points={{-47.8,-46},{-66,-46},{-66,-50},{-78,-50}},
          color={28,108,200},
          thickness=0.5));
      connect(La_load.epp,Transformer_L_a. epp_n) annotation (Line(
          points={{12.2,-20},{-10,-20},{-10,-8}},
          color={28,108,200},
          thickness=0.5));
      connect(Lb_load.epp,OLTC_L_b. epp) annotation (Line(
          points={{100.2,-18},{90,-18},{90,-21},{78,-21}},
          color={28,108,200},
          thickness=0.5));
      connect(Transformer_L_b.epp_n,OLTC_L_b. epp) annotation (Line(
          points={{86,-2},{86,-20},{84,-20},{84,-21},{78,-21}},
          color={28,108,200},
          thickness=0.5));
      connect(Lc_load.epp,Transformer_L_c. epp_n) annotation (Line(
          points={{190.2,-18},{156,-18},{156,-8}},
          color={28,108,200},
          thickness=0.5));
      connect(L2_load.epp,Transformer_L2. epp_n) annotation (Line(
          points={{294.2,40},{264,40}},
          color={28,108,200},
          thickness=0.5));
      connect(transmissionLine_Northern_2.epp_p,transmissionLine_Northern_1. epp_n) annotation (Line(
          points={{-44,40},{-54,40}},
          color={28,108,200},
          thickness=0.5));
      connect(transmissionLine_Northern_1.epp_p,biomass_G1_Slack. epp) annotation (Line(
          points={{-74,40},{-84,40},{-84,59.8},{-95.4,59.8}},
          color={28,108,200},
          thickness=0.5));
      connect(pQBoundary4.epp,transmissionLine_Northern_1. epp_n) annotation (Line(
          points={{-54,80},{-52,80},{-52,40},{-54,40}},
          color={28,108,200},
          thickness=0.5));
      connect(transmissionLine_Northern_2.epp_n,transmissionLine_Central. epp_p) annotation (Line(
          points={{-24,40},{-20,40},{-20,42},{-18,42},{-18,40},{14,40}},
          color={28,108,200},
          thickness=0.5));
      connect(Transformer_L1.epp_p,biomass_G1_Slack. epp) annotation (Line(
          points={{-64,-10},{-64,0},{-84,0},{-84,59.8},{-95.4,59.8}},
          color={28,108,200},
          thickness=0.5));
      connect(globalFrequency.epp,biomass_G1_Slack. epp) annotation (Line(
          points={{-108,-8},{-96,-8},{-96,0},{-84,0},{-84,59.8},{-95.4,59.8}},
          color={28,108,200},
          thickness=0.5));
      connect(transmissionLine_CentralLower_2.epp_p,transmissionLine_CentralLower_1. epp_n) annotation (Line(
          points={{130,40},{118,40}},
          color={28,108,200},
          thickness=0.5));
      connect(pQBoundary3.epp,transmissionLine_CentralLower_1. epp_n) annotation (Line(
          points={{128,75},{128,40},{118,40}},
          color={28,108,200},
          thickness=0.5));
      connect(transmissionLine_CentralLower_1.epp_p,transmissionLine_Central. epp_n) annotation (Line(
          points={{94,40},{34,40}},
          color={28,108,200},
          thickness=0.5));
      connect(pQBoundary2.epp,transmissionLine_Southern_1. epp_n) annotation (Line(
          points={{200,9},{200,40},{196,40}},
          color={28,108,200},
          thickness=0.5));
      connect(transmissionLine_CentralLower_2.epp_n,transmissionLine_Southern_1. epp_p) annotation (Line(
          points={{154,40},{172,40}},
          color={28,108,200},
          thickness=0.5));
      connect(transmissionLine_Southern_2.epp_n,Transformer_L2. epp_p) annotation (Line(
          points={{228,40},{244,40}},
          color={28,108,200},
          thickness=0.5));
      connect(pQBoundary5.epp,transmissionLine_Southern_1. epp_p) annotation (Line(
          points={{158,79},{160,79},{160,40},{172,40}},
          color={28,108,200},
          thickness=0.5));
      connect(Transformer_L_c.epp_p,transmissionLine_Southern_1. epp_p) annotation (Line(
          points={{156,12},{158,12},{158,40},{172,40}},
          color={28,108,200},
          thickness=0.5));
      connect(biomass_G2.epp,Transformer_L2. epp_p) annotation (Line(
          points={{218.9,80.7},{236,80.7},{236,40},{244,40}},
          color={28,108,200},
          thickness=0.5));
      connect(transmissionLine_Southern_2.epp_p,transmissionLine_Southern_1. epp_n) annotation (Line(
          points={{204,40},{196,40}},
          color={28,108,200},
          thickness=0.5));
      connect(L1_heating.epp, OLTC_L1.epp) annotation (Line(
          points={{-57.6,-79.6},{-66,-79.6},{-66,-50},{-78,-50}},
          color={28,108,200},
          thickness=0.5));
      connect(La_heating.epp, Transformer_L_a.epp_n) annotation (Line(
          points={{10.4,-55.6},{-10,-55.6},{-10,-8}},
          color={28,108,200},
          thickness=0.5));
      connect(Lb_heating.epp, OLTC_L_b.epp) annotation (Line(
          points={{94.4,-59.6},{84,-59.6},{84,-21},{78,-21}},
          color={28,108,200},
          thickness=0.5));
      connect(Lc_heating.epp, Transformer_L_c.epp_n) annotation (Line(
          points={{176.4,-69.6},{156,-69.6},{156,-8}},
          color={28,108,200},
          thickness=0.5));
      connect(L2_heating.epp, Transformer_L2.epp_n) annotation (Line(
          points={{280.4,-11.6},{276,-11.6},{276,40},{264,40}},
          color={28,108,200},
          thickness=0.5));
      connect(eLIVES_L_a.epp_prim, transmissionLine_Central.epp_p) annotation (Line(
          points={{41.2,-62},{34,-62},{34,18},{-12,18},{-12,40},{14,40}},
          color={28,108,200},
          thickness=0.5));
      connect(OLTC_L_a.CurrentTapOut, eLIVES_L_a.input_from_OLTC) annotation (Line(points={{-32,-25.84},{-34,-25.84},{-34,-34},{30,-34},{30,-46},{40,-46},{40,-56}}, color={0,0,127}));
      connect(eLIVES_L_a.epp_sec, Transformer_L_a.epp_n) annotation (Line(
          points={{41.2,-70},{4,-70},{4,-56},{2,-56},{2,-55.6},{-10,-55.6},{-10,-8}},
          color={28,108,200},
          thickness=0.5));
      annotation (
        Diagram(coordinateSystem(extent={{-160,-100},{320,120}}), graphics={Text(
              extent={{2,26},{48,18}},
              lineColor={28,108,200},
              textString="2 parallel AC lines"),                            Text(
              extent={{-140,122},{-54,112}},
              lineColor={28,108,200},
              textString="N5area Test System (NORDIC 32 adoptation)"),
            Text(
              extent={{-10,-68},{292,-104}},
              lineColor={28,108,200},
              textString="Simulation needs to be started at a time with low load for an easy initialization. Additionally changing the starttime requires a change in the ramp parameter inside the heatpump-model.")}),
        Icon(coordinateSystem(extent={{-160,-100},{320,120}}), graphics={
                                       Ellipse(
              lineColor={0,125,125},
              fillColor={255,255,255},
              fillPattern=FillPattern.Solid,
              extent={{-112,-222},{368,266}}), Polygon(
              points={{24,-56},{4,-74},{62,-136},{86,-128},{250,184},{222,196},{80,-142},{40,-104},{24,-56}},
              smooth=Smooth.Bezier,
              fillColor={0,124,124},
              fillPattern=FillPattern.Solid,
              pattern=LinePattern.None)}),
        experiment(
          StartTime=2200000,
          StopTime=2400000,
          Interval=5,
          __Dymola_Algorithm="Dassl"));
    end CheckeLIVES_Heatpump;

    model CheckLIVES_IdealBoiler

      inner TransiEnt.ModelStatistics modelStatistics annotation (Placement(transformation(extent={{-114,-98},{-94,-78}})));
      TransiEnt.Components.Electrical.Grid.PiModelComplex_advanced transmissionLine_Central(
        ChooseVoltageLevel=3,
        p=2,
        MVCableType=TransiEnt.Components.Electrical.Grid.Characteristics.MVCabletypes.L1,
        HVCableType=TransiEnt.Components.Electrical.Grid.Characteristics.HVCabletypes.L6,
        l(displayUnit="km") = 200000)
        annotation (Placement(transformation(extent={{14,30},{34,50}})));
      TransiEnt.Components.Electrical.Grid.PiModelComplex_advanced transmissionLine_CentralFault(
        activateSwitch=true,
        ChooseVoltageLevel=3,
        p=2,
        MVCableType=TransiEnt.Components.Electrical.Grid.Characteristics.MVCabletypes.L1,
        HVCableType=TransiEnt.Components.Electrical.Grid.Characteristics.HVCabletypes.L4,
        l(displayUnit="km") = 200000)
        annotation (Placement(transformation(extent={{12,64},{32,84}})));
      Modelica.Blocks.Sources.BooleanStep  BooleanFault(startTime(displayUnit="s") = 2400400)
        annotation (Placement(transformation(extent={{-14,92},{2,108}})));
      TransiEnt.Components.Electrical.PowerTransformation.SimpleTransformerComplex Transformer_L1(
        UseInput=true,
        U_P(displayUnit="kV") = 380000,
        U_S(displayUnit="kV") = 110000,
        P_p(displayUnit="MW", start=15000000),
        P_n(displayUnit="MW", start=-15000000)) annotation (Placement(
            transformation(
            extent={{10,-10},{-10,10}},
            rotation=90,
            origin={-64,-20})));
      TransiEnt.Components.Electrical.PowerTransformation.OLTC.TapChangerController OLTC_L1(
        numberTaps=11,
        v_prim_n(displayUnit="kV") = 380000,
        v_sec_n(displayUnit="kV") = 110000) annotation (Placement(transformation(extent={{-78,-58},{-96,-42}})));
      TransiEnt.Components.Electrical.PowerTransformation.SimpleTransformerComplex Transformer_L_a(
        UseInput=true,
        U_P(displayUnit="kV") = 380000,
        U_S(displayUnit="kV") = 110000,
        P_p(displayUnit="MW", start=15000000),
        P_n(displayUnit="MW", start=-15000000)) annotation (Placement(
            transformation(
            extent={{10,-10},{-10,10}},
            rotation=90,
            origin={-10,2})));
      OLTC_OutputCurrentTap                                                         OLTC_L_a(
        numberTaps=11,
        v_prim_n(displayUnit="kV") = 380000,
        v_sec_n(displayUnit="kV") = 110000,
        T_delay=10,
        currentTap(start=0)) annotation (Placement(transformation(extent={{-14,-28},{-32,-10}})));
      TransiEnt.Components.Electrical.PowerTransformation.SimpleTransformerComplex Transformer_L_b(
        UseInput=true,
        UseRatio=false,
        U_P(displayUnit="kV") = 380000,
        U_S(displayUnit="kV") = 110000,
        P_p(displayUnit="MW", start=15000000),
        P_n(displayUnit="MW", start=-15000000)) annotation (Placement(
            transformation(
            extent={{10,-10},{-10,10}},
            rotation=90,
            origin={86,8})));
      TransiEnt.Components.Electrical.PowerTransformation.OLTC.TapChangerController OLTC_L_b(
        numberTaps=11,
        v_prim_n(displayUnit="kV") = 380000,
        v_sec_n(displayUnit="kV") = 110000) annotation (Placement(transformation(extent={{78,-30},{60,-12}})));
      TransiEnt.Components.Electrical.PowerTransformation.SimpleTransformerComplex Transformer_L_c(
        UseInput=true,
        U_P(displayUnit="kV") = 380000,
        U_S(displayUnit="kV") = 110000,
        P_p(displayUnit="MW", start=15000000),
        P_n(displayUnit="MW", start=-15000000)) annotation (Placement(
            transformation(
            extent={{10,-10},{-10,10}},
            rotation=90,
            origin={156,2})));
      TransiEnt.Components.Electrical.PowerTransformation.SimpleTransformerComplex Transformer_L2(
        UseInput=true,
        U_P(displayUnit="kV") = 380000,
        U_S(displayUnit="kV") = 110000,
        P_p(displayUnit="MW", start=15000000),
        P_n(displayUnit="MW", start=-15000000)) annotation (Placement(
            transformation(
            extent={{-10,-10},{10,10}},
            rotation=0,
            origin={254,40})));
      TransiEnt.Components.Electrical.PowerTransformation.OLTC.TapChangerController OLTC_L_c(
        numberTaps=11,
        v_prim_n(displayUnit="kV") = 380000,
        v_sec_n(displayUnit="kV") = 110000,
        currentTap(start=0)) annotation (Placement(transformation(extent={{150,-28},{132,-10}})));
      TransiEnt.Components.Electrical.PowerTransformation.OLTC.TapChangerController OLTC_L2(
        numberTaps=11,
        v_prim_n(displayUnit="kV") = 380000,
        v_sec_n(displayUnit="kV") = 110000) annotation (Placement(transformation(extent={{270,72},{252,88}})));
    protected
      TransiEnt.Producer.Electrical.Others.Biomass biomass_G1_Slack(
        primaryBalancingController(maxGradientPrCtrl=0.03/30, maxValuePrCtrl=0.03),
        H=11,
        redeclare TransiEnt.Basics.Interfaces.Electrical.ComplexPowerPort epp,
        set_P_init=false,
        isPrimaryControlActive=true,
        P_min_star=0.1,
        redeclare TransiEnt.Components.Electrical.Machines.ExcitationSystemsVoltageController.DCExciter Exciter(
          TA=1,
          KA=80,
          LimitofExcitation=0.6),
        isSecondaryControlActive=true,
        isExternalSecondaryController=true,
        P_el_n(displayUnit="MW") = 3000000000,
        redeclare TransiEnt.Components.Electrical.Machines.SynchronousMachineComplex Generator(IsSlack=true, R_a=0),
        Turbine(plantDynamic(initOption=3)))
        annotation (Placement(transformation(extent={{-122,36},{-94,64}})));
    public
      Modelica.Blocks.Sources.Constant const(k=-biomass_G1_Slack.P_init)
        annotation (Placement(transformation(extent={{-84,86},{-98,100}})));
      Modelica.Blocks.Continuous.Integrator integrator(k=-1.36e5)
                                                                annotation (Placement(transformation(
            extent={{-8,-8},{8,8}},
            rotation=0,
            origin={-130,80})));
      Modelica.Blocks.Sources.RealExpression globalFrequency_reference(y=simCenter.f_n) annotation (Placement(transformation(extent={{-88,10},{-110,22}})));
         TransiEnt.Components.Sensors.ElectricFrequencyComplex globalFrequency annotation (Placement(transformation(extent={{-108,-14},{-120,-2}})));
      Modelica.Blocks.Math.Feedback feedback annotation (Placement(transformation(extent={{-126,10},{-138,22}})));
    protected
      TransiEnt.Producer.Electrical.Others.Biomass biomass_G3(
        primaryBalancingController(maxGradientPrCtrl=0.03/30, maxValuePrCtrl=0.03),
        P_init_set=100e6,
        H=11,
        redeclare TransiEnt.Basics.Interfaces.Electrical.ComplexPowerPort epp,
        set_P_init=true,
        isPrimaryControlActive=true,
        redeclare TransiEnt.Components.Electrical.Machines.ExcitationSystemsVoltageController.DCExciter Exciter(LimitofExcitation=0.5),
        isSecondaryControlActive=false,
        isExternalSecondaryController=true,
        P_el_n(displayUnit="MW") = 250000000,
        redeclare TransiEnt.Components.Electrical.Machines.SynchronousMachineComplex Generator(R_a=0))
        annotation (Placement(transformation(extent={{86,70},{62,94}})));
    public
      Modelica.Blocks.Sources.Constant const1(k=-biomass_G3.P_init)
                                                                 annotation (Placement(transformation(extent={{112,96},{98,110}})));
    protected
      TransiEnt.Producer.Electrical.Others.Biomass biomass_G2(
        integrateCDE=true,
        calculateCost=true,
        primaryBalancingController(maxGradientPrCtrl=0.03/30, maxValuePrCtrl=0.03),
        P_init_set=50e6,
        H=11,
        redeclare TransiEnt.Basics.Interfaces.Electrical.ComplexPowerPort epp,
        set_P_init=true,
        isPrimaryControlActive=true,
        redeclare TransiEnt.Components.Electrical.Machines.ExcitationSystemsVoltageController.DCExciter Exciter(LimitofExcitation=0.5),
        isSecondaryControlActive=false,
        isExternalSecondaryController=true,
        P_el_n(displayUnit="MW") = 100000000,
        redeclare TransiEnt.Components.Electrical.Machines.SynchronousMachineComplex Generator(R_a=0))
        annotation (Placement(transformation(extent={{198,62},{220,84}})));
    public
      Modelica.Blocks.Sources.Constant const2(k=-biomass_G2.P_init)
                                                                 annotation (Placement(transformation(extent={{188,92},{202,106}})));
      Modelica.Blocks.Logical.Not not1
        annotation (Placement(transformation(extent={{10,94},{22,106}})));
      TransiEnt.Components.Boundaries.Electrical.ComplexPower.PQBoundary pQBoundary1(
        useInputConnectorP=false,
        useInputConnectorQ=false,
        v_n(displayUnit="kV") = 380000)
                                       annotation (Placement(transformation(extent={{-28,72},{-44,88}})));
      inner TransiEnt.SimCenter simCenter(
        redeclare TILMedia.VLEFluidTypes.TILMedia_SplineWater fluid1,
        v_n(displayUnit="kV") = 380000,
        tableInterpolationSmoothness=Modelica.Blocks.Types.Smoothness.MonotoneContinuousDerivative2,
        ambientConditions(
          redeclare TransiEnt.Basics.Tables.Ambient.Wind_Hamburg_Fuhlsbuettel_3600s_2012 wind,
          redeclare TransiEnt.Basics.Tables.Ambient.GHI_Hamburg_3600s_2012_TMY globalSolarRadiation,
          redeclare TransiEnt.Basics.Tables.Ambient.DNI_Hamburg_3600s_2012_TMY directSolarRadiation,
          redeclare TransiEnt.Basics.Tables.Ambient.DHI_Hamburg_3600s_2012_TMY diffuseSolarRadiation,
          redeclare TransiEnt.Basics.Tables.Ambient.Temperature_Hamburg_900s_2012 temperature),
        integrateHeatFlow=true)                                                                         annotation (Placement(transformation(extent={{-148,-98},{-128,-78}})));
      ResiliEntEE.Experiments.Electrical.N5areaLoadTest.Components.ClaRa_ElectricHeatSystemBoiler_Ideal L1_heating(scalingFactor=30000*1.015) annotation (Placement(transformation(extent={{-50,-90},{-30,-70}})));
      ResiliEntEE.Experiments.Electrical.N5areaLoadTest.Components.ClaRa_ElectricHeatSystemBoiler_Ideal La_heating(scalingFactor=1.015*15000) annotation (Placement(transformation(extent={{10,-64},{30,-44}})));
      ResiliEntEE.Experiments.Electrical.N5areaLoadTest.Components.ClaRa_ElectricHeatSystemBoiler_Ideal Lb_heating(scalingFactor=1.02*7.64*15000) annotation (Placement(transformation(extent={{102,-62},{122,-42}})));
      ResiliEntEE.Experiments.Electrical.N5areaLoadTest.Components.ClaRa_ElectricHeatSystemBoiler_Ideal Lc_heating(scalingFactor=1.015*15000) annotation (Placement(transformation(extent={{194,-64},{214,-44}})));
      ResiliEntEE.Experiments.Electrical.N5areaLoadTest.Components.ClaRa_ElectricHeatSystemBoiler_Ideal L2_heating(scalingFactor=1.015*18750) annotation (Placement(transformation(extent={{292,-8},{312,12}})));
      TransiEnt.Consumer.Electrical.ExponentialElectricConsumerComplex L1_load(
        P_el_set_const=40.6e6,
        useCosPhi=false,
        Q_el_set=20.3e6,
        v_n=110e3) annotation (Placement(transformation(extent={{-48,-56},{-28,-36}})));
      TransiEnt.Consumer.Electrical.ExponentialElectricConsumerComplex La_load(
        P_el_set_const=20.3e6,
        useCosPhi=false,
        Q_el_set=10.15e6,
        v_n=110e3) annotation (Placement(transformation(extent={{12,-30},{32,-10}})));
      TransiEnt.Consumer.Electrical.ExponentialElectricConsumerComplex Lb_load(
        P_el_set_const=1.02*764e6,
        useCosPhi=false,
        Q_el_set=1.02*382e6,
        v_n=110e3) annotation (Placement(transformation(extent={{100,-28},{120,-8}})));
      TransiEnt.Consumer.Electrical.ExponentialElectricConsumerComplex Lc_load(
        P_el_set_const=1.015*30e6,
        useCosPhi=false,
        Q_el_set=1.015*15e6,
        v_n=110e3) annotation (Placement(transformation(extent={{190,-28},{210,-8}})));
      TransiEnt.Consumer.Electrical.ExponentialElectricConsumerComplex L2_load(
        P_el_set_const=1.015*125e6,
        useCosPhi=false,
        Q_el_set=1.015*75e6,
        v_n=110e3) annotation (Placement(transformation(extent={{294,30},{314,50}})));
      TransiEnt.Components.Electrical.Grid.PiModelComplex_advanced transmissionLine_Northern_2(
        ChooseVoltageLevel=3,
        p=2,
        HVCableType=TransiEnt.Components.Electrical.Grid.Characteristics.HVCabletypes.L6,
        l(displayUnit="km") = 200000) annotation (Placement(transformation(extent={{-44,30},{-24,50}})));
      TransiEnt.Components.Electrical.Grid.PiModelComplex_advanced transmissionLine_Northern_1(
        ChooseVoltageLevel=3,
        p=2,
        HVCableType=TransiEnt.Components.Electrical.Grid.Characteristics.HVCabletypes.L6,
        l(displayUnit="km") = 200000) annotation (Placement(transformation(extent={{-74,30},{-54,50}})));
      TransiEnt.Components.Boundaries.Electrical.ComplexPower.PQBoundary pQBoundary4(
        useInputConnectorP=false,
        useInputConnectorQ=false,
        v_n(displayUnit="kV") = 380000)
                                       annotation (Placement(transformation(extent={{-54,72},{-70,88}})));
      TransiEnt.Components.Electrical.Grid.PiModelComplex_advanced transmissionLine_CentralLower_1(
        activateSwitch=false,
        ChooseVoltageLevel=3,
        p=2,
        LVCableType=TransiEnt.Components.Electrical.Grid.Characteristics.LVCabletypes.K2,
        MVCableType=TransiEnt.Components.Electrical.Grid.Characteristics.MVCabletypes.L1,
        HVCableType=TransiEnt.Components.Electrical.Grid.Characteristics.HVCabletypes.L6,
        l(displayUnit="km") = 300000) annotation (Placement(transformation(extent={{94,28},{118,52}})));
      TransiEnt.Components.Electrical.Grid.PiModelComplex_advanced transmissionLine_CentralLower_2(
        activateSwitch=false,
        ChooseVoltageLevel=3,
        p=2,
        LVCableType=TransiEnt.Components.Electrical.Grid.Characteristics.LVCabletypes.K2,
        MVCableType=TransiEnt.Components.Electrical.Grid.Characteristics.MVCabletypes.L1,
        HVCableType=TransiEnt.Components.Electrical.Grid.Characteristics.HVCabletypes.L6,
        l(displayUnit="km") = 300000) annotation (Placement(transformation(extent={{130,28},{154,52}})));
      TransiEnt.Components.Boundaries.Electrical.ComplexPower.PQBoundary pQBoundary3(
        useInputConnectorP=false,
        useInputConnectorQ=false,
        v_n(displayUnit="kV") = 380000)
                                       annotation (Placement(transformation(extent={{128,68},{114,82}})));
      TransiEnt.Components.Boundaries.Electrical.ComplexPower.PQBoundary pQBoundary5(
        useInputConnectorP=false,
        useInputConnectorQ=false,
        v_n(displayUnit="kV") = 380000)
                                       annotation (Placement(transformation(extent={{158,72},{142,86}})));
      TransiEnt.Components.Electrical.Grid.PiModelComplex_advanced transmissionLine_Southern_2(
        activateSwitch=false,
        ChooseVoltageLevel=3,
        p=2,
        LVCableType=TransiEnt.Components.Electrical.Grid.Characteristics.LVCabletypes.K1,
        MVCableType=TransiEnt.Components.Electrical.Grid.Characteristics.MVCabletypes.L1,
        HVCableType=TransiEnt.Components.Electrical.Grid.Characteristics.HVCabletypes.L6,
        l(displayUnit="km") = 250000) annotation (Placement(transformation(extent={{204,28},{228,52}})));
      TransiEnt.Components.Electrical.Grid.PiModelComplex_advanced transmissionLine_Southern_1(
        activateSwitch=false,
        ChooseVoltageLevel=3,
        p=2,
        LVCableType=TransiEnt.Components.Electrical.Grid.Characteristics.LVCabletypes.K1,
        MVCableType=TransiEnt.Components.Electrical.Grid.Characteristics.MVCabletypes.L1,
        HVCableType=TransiEnt.Components.Electrical.Grid.Characteristics.HVCabletypes.L6,
        l(displayUnit="km") = 250000) annotation (Placement(transformation(extent={{172,28},{196,52}})));
      TransiEnt.Components.Boundaries.Electrical.ComplexPower.PQBoundary pQBoundary2(
        useInputConnectorP=false,
        useInputConnectorQ=false,
        v_n(displayUnit="kV") = 380000)
                                       annotation (Placement(transformation(extent={{200,2},{184,16}})));
      eLIVES eLIVES_L_a(Toff=1500, T_max=1000,
        deltaVcrit=0.025*380000)
                        annotation (Placement(transformation(extent={{46,-90},{66,-70}})));
    equation
      connect(transmissionLine_CentralFault.epp_p,transmissionLine_Central. epp_p)
        annotation (Line(
          points={{12,74},{2,74},{2,40},{14,40}},
          color={28,108,200},
          thickness=0.5));
      connect(transmissionLine_CentralFault.epp_n,transmissionLine_Central. epp_n)
        annotation (Line(
          points={{32,74},{44,74},{44,40},{34,40}},
          color={28,108,200},
          thickness=0.5));
      connect(OLTC_L1.RatioOut,Transformer_L1. ratio_set)
        annotation (Line(points={{-96,-50},{-96,-14},{-76,-14}}, color={0,0,127}));
      connect(Transformer_L_a.epp_p,transmissionLine_Central. epp_p) annotation (
          Line(
          points={{-10,12},{-12,12},{-12,40},{14,40}},
          color={28,108,200},
          thickness=0.5));
      connect(OLTC_L_a.RatioOut,Transformer_L_a. ratio_set) annotation (Line(points={{-32,-19},{-44,-19},{-44,8},{-22,8}},
                                                    color={0,0,127}));
      connect(Transformer_L_b.epp_p,transmissionLine_Central. epp_n) annotation (
          Line(
          points={{86,18},{86,40},{34,40}},
          color={28,108,200},
          thickness=0.5));
      connect(OLTC_L_b.RatioOut,Transformer_L_b. ratio_set) annotation (Line(points={{60,-21},{52,-21},{52,14},{74,14}},
                                                  color={0,0,127}));
      connect(OLTC_L_c.epp,Transformer_L_c. epp_n) annotation (Line(
          points={{150,-19},{156,-19},{156,-8}},
          color={28,108,200},
          thickness=0.5));
      connect(OLTC_L_c.RatioOut,Transformer_L_c. ratio_set)
        annotation (Line(points={{132,-19},{132,8},{144,8}}, color={0,0,127}));
      connect(OLTC_L2.RatioOut,Transformer_L2. ratio_set)
        annotation (Line(points={{252,80},{248,80},{248,52}}, color={0,0,127}));
      connect(const.y,biomass_G1_Slack. P_el_set) annotation (Line(points={{-98.7,93},{-108,93},{-108,63.86},{-110.1,63.86}},
                                                          color={0,0,127}));
      connect(integrator.y,biomass_G1_Slack. P_SB_set) annotation (Line(points={{-121.2,80},{-120.46,80},{-120.46,62.46}},
                                                 color={0,0,127}));
      connect(globalFrequency_reference.y,feedback. u1)
        annotation (Line(points={{-111.1,16},{-127.2,16}}, color={0,0,127}));
      connect(globalFrequency.f,feedback. u2) annotation (Line(points={{-120.24,-8},{-132,-8},{-132,11.2}},
                                      color={0,0,127}));
      connect(feedback.y,integrator. u) annotation (Line(points={{-137.4,16},{-144,16},{-144,80},{-139.6,80}},
                                          color={0,0,127}));
      connect(const1.y,biomass_G3. P_el_set) annotation (Line(points={{97.3,103},{96,103},{96,102},{86,102},{86,93.88},{75.8,93.88}},
                                                        color={0,0,127}));
      connect(const2.y,biomass_G2. P_el_set) annotation (Line(points={{202.7,99},{204,99},{204,100},{214,100},{214,83.89},{207.35,83.89}},
                                                      color={0,0,127}));
      connect(BooleanFault.y,not1. u)
        annotation (Line(points={{2.8,100},{8.8,100}},  color={255,0,255}));
      connect(not1.y,transmissionLine_CentralFault. switched_input) annotation (
          Line(points={{22.6,100},{24,100},{24,84},{22,84}}, color={255,0,255}));
      connect(OLTC_L_a.epp,Transformer_L_a. epp_n) annotation (Line(
          points={{-14,-19},{-14,-20},{-10,-20},{-10,-8}},
          color={28,108,200},
          thickness=0.5));
      connect(OLTC_L2.epp,Transformer_L2. epp_n) annotation (Line(
          points={{270,80},{276,80},{276,40},{264,40}},
          color={28,108,200},
          thickness=0.5));
      connect(pQBoundary1.epp,transmissionLine_Central. epp_p) annotation (Line(
          points={{-28,80},{-18,80},{-18,40},{14,40}},
          color={28,108,200},
          thickness=0.5));
      connect(biomass_G3.epp,transmissionLine_Central. epp_n) annotation (Line(
          points={{63.2,90.4},{50,90.4},{50,40},{34,40}},
          color={28,108,200},
          thickness=0.5));
      connect(La_heating.epp,Transformer_L_a. epp_n) annotation (Line(
          points={{10,-54},{-4,-54},{-4,-20},{-10,-20},{-10,-8}},
          color={28,108,200},
          thickness=0.5));
      connect(Lc_heating.epp,Transformer_L_c. epp_n) annotation (Line(
          points={{194,-54},{156,-54},{156,-8}},
          color={28,108,200},
          thickness=0.5));
      connect(L2_heating.epp,Transformer_L2. epp_n) annotation (Line(
          points={{292,2},{276,2},{276,40},{264,40}},
          color={28,108,200},
          thickness=0.5));
      connect(Transformer_L1.epp_n,OLTC_L1. epp) annotation (Line(
          points={{-64,-30},{-66,-30},{-66,-50},{-78,-50}},
          color={28,108,200},
          thickness=0.5));
      connect(L1_heating.epp,OLTC_L1. epp) annotation (Line(
          points={{-50,-80},{-66,-80},{-66,-50},{-78,-50}},
          color={28,108,200},
          thickness=0.5));
      connect(L1_load.epp,OLTC_L1. epp) annotation (Line(
          points={{-47.8,-46},{-66,-46},{-66,-50},{-78,-50}},
          color={28,108,200},
          thickness=0.5));
      connect(La_load.epp,Transformer_L_a. epp_n) annotation (Line(
          points={{12.2,-20},{-10,-20},{-10,-8}},
          color={28,108,200},
          thickness=0.5));
      connect(Lb_load.epp,OLTC_L_b. epp) annotation (Line(
          points={{100.2,-18},{90,-18},{90,-21},{78,-21}},
          color={28,108,200},
          thickness=0.5));
      connect(Transformer_L_b.epp_n,OLTC_L_b. epp) annotation (Line(
          points={{86,-2},{86,-20},{84,-20},{84,-21},{78,-21}},
          color={28,108,200},
          thickness=0.5));
      connect(Lb_heating.epp,OLTC_L_b. epp) annotation (Line(
          points={{102,-52},{86,-52},{86,-21},{78,-21}},
          color={28,108,200},
          thickness=0.5));
      connect(Lc_load.epp,Transformer_L_c. epp_n) annotation (Line(
          points={{190.2,-18},{156,-18},{156,-8}},
          color={28,108,200},
          thickness=0.5));
      connect(L2_load.epp,Transformer_L2. epp_n) annotation (Line(
          points={{294.2,40},{264,40}},
          color={28,108,200},
          thickness=0.5));
      connect(transmissionLine_Northern_2.epp_p,transmissionLine_Northern_1. epp_n) annotation (Line(
          points={{-44,40},{-54,40}},
          color={28,108,200},
          thickness=0.5));
      connect(transmissionLine_Northern_1.epp_p,biomass_G1_Slack. epp) annotation (Line(
          points={{-74,40},{-84,40},{-84,59.8},{-95.4,59.8}},
          color={28,108,200},
          thickness=0.5));
      connect(pQBoundary4.epp,transmissionLine_Northern_1. epp_n) annotation (Line(
          points={{-54,80},{-52,80},{-52,40},{-54,40}},
          color={28,108,200},
          thickness=0.5));
      connect(transmissionLine_Northern_2.epp_n,transmissionLine_Central. epp_p) annotation (Line(
          points={{-24,40},{-20,40},{-20,42},{-18,42},{-18,40},{14,40}},
          color={28,108,200},
          thickness=0.5));
      connect(Transformer_L1.epp_p,biomass_G1_Slack. epp) annotation (Line(
          points={{-64,-10},{-64,0},{-84,0},{-84,59.8},{-95.4,59.8}},
          color={28,108,200},
          thickness=0.5));
      connect(globalFrequency.epp,biomass_G1_Slack. epp) annotation (Line(
          points={{-108,-8},{-96,-8},{-96,0},{-84,0},{-84,59.8},{-95.4,59.8}},
          color={28,108,200},
          thickness=0.5));
      connect(transmissionLine_CentralLower_2.epp_p,transmissionLine_CentralLower_1. epp_n) annotation (Line(
          points={{130,40},{118,40}},
          color={28,108,200},
          thickness=0.5));
      connect(pQBoundary3.epp,transmissionLine_CentralLower_1. epp_n) annotation (Line(
          points={{128,75},{128,40},{118,40}},
          color={28,108,200},
          thickness=0.5));
      connect(transmissionLine_CentralLower_1.epp_p,transmissionLine_Central. epp_n) annotation (Line(
          points={{94,40},{34,40}},
          color={28,108,200},
          thickness=0.5));
      connect(pQBoundary2.epp,transmissionLine_Southern_1. epp_n) annotation (Line(
          points={{200,9},{200,40},{196,40}},
          color={28,108,200},
          thickness=0.5));
      connect(transmissionLine_CentralLower_2.epp_n,transmissionLine_Southern_1. epp_p) annotation (Line(
          points={{154,40},{172,40}},
          color={28,108,200},
          thickness=0.5));
      connect(transmissionLine_Southern_2.epp_n,Transformer_L2. epp_p) annotation (Line(
          points={{228,40},{244,40}},
          color={28,108,200},
          thickness=0.5));
      connect(pQBoundary5.epp,transmissionLine_Southern_1. epp_p) annotation (Line(
          points={{158,79},{160,79},{160,40},{172,40}},
          color={28,108,200},
          thickness=0.5));
      connect(Transformer_L_c.epp_p,transmissionLine_Southern_1. epp_p) annotation (Line(
          points={{156,12},{158,12},{158,40},{172,40}},
          color={28,108,200},
          thickness=0.5));
      connect(biomass_G2.epp,Transformer_L2. epp_p) annotation (Line(
          points={{218.9,80.7},{236,80.7},{236,40},{244,40}},
          color={28,108,200},
          thickness=0.5));
      connect(transmissionLine_Southern_2.epp_p,transmissionLine_Southern_1. epp_n) annotation (Line(
          points={{204,40},{196,40}},
          color={28,108,200},
          thickness=0.5));
      connect(eLIVES_L_a.input_from_OLTC, OLTC_L_a.CurrentTapOut) annotation (Line(points={{46,-74},{-20,-74},{-20,-34},{-38,-34},{-38,-25.84},{-32,-25.84}}, color={0,0,127}));
      connect(eLIVES_L_a.epp_prim, transmissionLine_Central.epp_p) annotation (Line(
          points={{47.2,-80},{34,-80},{34,16},{-12,16},{-12,40},{14,40}},
          color={28,108,200},
          thickness=0.5));
      connect(eLIVES_L_a.epp_sec, Transformer_L_a.epp_n) annotation (Line(
          points={{47.2,-88},{-4,-88},{-4,-20},{-10,-20},{-10,-8}},
          color={28,108,200},
          thickness=0.5));
      annotation (
        Diagram(coordinateSystem(extent={{-160,-100},{320,120}}), graphics={Text(
              extent={{2,26},{48,18}},
              lineColor={28,108,200},
              textString="2 parallel AC lines"),                            Text(
              extent={{-140,122},{-54,112}},
              lineColor={28,108,200},
              textString="N5area Test System (NORDIC 32 adoptation)")}),
        Icon(coordinateSystem(extent={{-160,-100},{320,120}}), graphics={
                                       Ellipse(
              lineColor={0,125,125},
              fillColor={255,255,255},
              fillPattern=FillPattern.Solid,
              extent={{-88,-210},{392,278}}),  Polygon(
              points={{48,-44},{28,-62},{86,-124},{110,-116},{274,196},{246,208},{104,-130},{64,-92},{48,-44}},
              smooth=Smooth.Bezier,
              fillColor={0,124,124},
              fillPattern=FillPattern.Solid,
              pattern=LinePattern.None)}),
        experiment(
          StartTime=2360000,
          StopTime=2401500,
          Interval=1,
          __Dymola_Algorithm="Dassl"));
    end CheckLIVES_IdealBoiler;
  end Check;

  model eLIVES
  //________________________________________________________________________________//
  // Component of the TransiEnt Library, version: x.x.0                             //
  //                                                                                //
  // Licensed by Hamburg University of Technology under Modelica License 2.         //
  // Copyright 2020, Hamburg University of Technology.                              //
  //________________________________________________________________________________//
  //                                                                                //
  // TransiEnt.EE and ResiliEntEE are research projects supported by the German     //
  // Federal Ministry of Economics and Energy (FKZ 03ET4003 and 03ET4048).          //
  // The TransiEnt Library research team consists of the following project partners://
  // Institute of Engineering Thermodynamics (Hamburg University of Technology),    //
  // Institute of Energy Systems (Hamburg University of Technology),                //
  // Institute of Electrical Power and Energy Technology                            //
  // (Hamburg University of Technology)                                             //
  // Institute of Electrical Power Systems and Automation                           //
  // (Hamburg University of Technology)                                             //
  // and is supported by                                                            //
  // XRG Simulation GmbH (Hamburg, Germany).                                        //
  //________________________________________________________________________________//

    // _____________________________________________
    //
    //          Imports and Class Hierarchy
    // _____________________________________________

  extends TransiEnt.Basics.Icons.Block;

    // _____________________________________________
    //
    //              Visible Parameters
    // _____________________________________________

    parameter Modelica.Units.SI.Voltage v_n_prim=simCenter.v_n;
    parameter Modelica.Units.SI.Voltage v_n_sec=110e3;
    parameter Modelica.Units.SI.Time Toff=250;
    parameter Modelica.Units.SI.Time T_max=100;
    parameter Modelica.Units.SI.Voltage deltaV=0.025*v_n_sec;
    parameter Modelica.Units.SI.Voltage deltaVcrit=0.05*v_n_prim;
    parameter Modelica.Units.SI.Voltage VHVAlarm=0.9*v_n_prim;
    parameter Modelica.Units.SI.Time T_sample=0.05;
    parameter Real TapMax=11;

    // _____________________________________________
    //
    //                 Outer Models
    // _____________________________________________

    outer TransiEnt.SimCenter simCenter;

    // _____________________________________________
    //
    //                  Interfaces
    // _____________________________________________

    Modelica.Blocks.Interfaces.BooleanOutput eLIVES_Warning annotation (Placement(transformation(extent={{90,30},{110,50}}), iconTransformation(extent={{90,30},{110,50}})));
    Modelica.Blocks.Interfaces.BooleanOutput eLIVES_Alarm annotation (Placement(transformation(extent={{90,-30},{110,-10}})));
    Modelica.Blocks.Interfaces.BooleanOutput HV_Alarm annotation (Placement(transformation(extent={{90,-90},{110,-70}})));
    Modelica.Blocks.Interfaces.RealInput input_from_OLTC annotation (Placement(transformation(extent={{-120,40},{-80,80}})));
    TransiEnt.Basics.Interfaces.Electrical.ComplexPowerPort epp_prim "High Voltage side" annotation (Placement(transformation(extent={{-98,-10},{-78,10}})));
    TransiEnt.Basics.Interfaces.Electrical.ComplexPowerPort epp_sec "Low Voltage side" annotation (Placement(transformation(extent={{-98,-90},{-78,-70}})));

    // _____________________________________________
    //
    //           Instances of other Classes
    // _____________________________________________

    Modelica.Blocks.Continuous.Derivative derivative(initType=Modelica.Blocks.Types.Init.SteadyState) annotation (Placement(transformation(extent={{-68,-62},{-48,-42}})));
    TransiEnt.Components.Sensors.ElectricVoltageComplex electricVoltageComplex_sec "Low Voltage side"
                                                                                   annotation (Placement(transformation(extent={{-68,-90},{-48,-70}})));
    Modelica.Blocks.Math.ContinuousMean continuousMean "calculates mean since switch on"
                                                       annotation (Placement(transformation(extent={{12,-78},{32,-58}})));
    Modelica.Blocks.Logical.Timer Timer_recording annotation (Placement(transformation(extent={{12,52},{28,68}})));
    Modelica.Blocks.Math.RealToInteger realToInteger annotation (Placement(transformation(extent={{-72,50},{-52,70}})));
    Modelica.Blocks.Sources.BooleanExpression expression_tap_change_occurred(y=tap_change_occurred) annotation (Placement(transformation(extent={{-46,50},{-14,70}})));
    Modelica.Blocks.Logical.And andWarning annotation (Placement(transformation(extent={{54,28},{68,42}})));
    Modelica.Blocks.Logical.Greater greaterWarning annotation (Placement(transformation(extent={{8,16},{20,28}})));
    TransiEnt.Components.Sensors.ElectricVoltageComplex electricVoltageComplex_prim "High Voltage side"
                                                                                   annotation (Placement(transformation(extent={{-68,-10},{-48,10}})));
    Modelica.Blocks.Logical.LessThreshold lessHV_Alarm(threshold=VHVAlarm) annotation (Placement(transformation(extent={{-44,-36},{-24,-16}})));
    Modelica.Blocks.Logical.And andAlarm annotation (Placement(transformation(extent={{72,-14},{86,0}})));
    Modelica.Blocks.Discrete.TriggeredSampler storeHV annotation (Placement(transformation(extent={{-34,10},{-22,-2}})));
    Modelica.Blocks.Math.Feedback substractionHV annotation (Placement(transformation(extent={{10,-8},{30,12}})));
    Modelica.Blocks.Logical.GreaterThreshold
                                    greaterAlarm(threshold=deltaVcrit)
                                                 annotation (Placement(transformation(extent={{44,-10},{58,6}})));
                                                   Modelica.Blocks.Logical.Switch switch "switches on the calculation of voltage gradient"
                                                                                         annotation (Placement(transformation(extent={{-26,-78},{-6,-58}})));
    Modelica.Blocks.Sources.Constant const(k=0) annotation (Placement(transformation(extent={{-44,-98},{-32,-86}})));
    TransiEnt.Basics.Blocks.UserDefinedFunction DelayBlock(y=delay(DelayBlock.u, T_sample)) annotation (Placement(transformation(extent={{44,-78},{64,-58}})));
    Modelica.Blocks.Logical.Timer Timer_OLTCLimit annotation (Placement(transformation(extent={{6,80},{26,100}})));
    Modelica.Blocks.Logical.And andTimer annotation (Placement(transformation(extent={{20,34},{30,44}})));
    Modelica.Blocks.Sources.BooleanExpression expression_tapMaxreached(y=tapMaxreached == 1)
                                                                                        annotation (Placement(transformation(extent={{-50,80},{-18,100}})));
    Modelica.Blocks.Logical.GreaterThreshold greater_OLTCLimit(threshold=T_max) annotation (Placement(transformation(extent={{52,80},{72,100}})));
    Modelica.Blocks.Logical.GreaterThreshold greater_Timer_recording(threshold=Toff) annotation (Placement(transformation(extent={{48,48},{68,68}})));
    Modelica.Blocks.Logical.Pre pre_OLTCLimit annotation (Placement(transformation(extent={{82,80},{102,100}})));
    Modelica.Blocks.Logical.Pre pre_Timer_recording annotation (Placement(transformation(extent={{82,48},{102,68}})));

    // _____________________________________________
    //
    //             Variable Declarations
    // _____________________________________________

    Boolean tap_change_occurred;
    Integer tapMaxreached;

    // _____________________________________________
    //
    //           Characteristic Equations
    // _____________________________________________

    Modelica.Blocks.Sources.BooleanExpression expression_tapMaxreached1(y=tapMaxreached == 1 or tapMaxreached == 0)
                                                                                        annotation (Placement(transformation(extent={{-58,34},{-26,54}})));
  initial equation

    tap_change_occurred=false;
    tapMaxreached=0;

  equation

    //calculation of slope by Blocks
    //other implementation in Blocks

    when change(realToInteger.y) then
      if electricVoltageComplex_sec.v < v_n_sec - deltaV then
      tap_change_occurred=true;
      else

     tap_change_occurred=false;

    end if;
         elsewhen
              pre_Timer_recording.y then
      tap_change_occurred=false;

    end when;

    when input_from_OLTC>=TapMax then
      if tap_change_occurred==true then
        tapMaxreached=1;
      else
        tapMaxreached=0;
      end if;

         elsewhen
              pre_OLTCLimit.y then
      tapMaxreached=2;

    end when;

    // _____________________________________________
    //
    //               Connect Statements
    // _____________________________________________

    connect(electricVoltageComplex_sec.epp, epp_sec) annotation (Line(
        points={{-68,-79.8},{-77,-79.8},{-77,-80},{-88,-80}},
        color={28,108,200},
        thickness=0.5));
    connect(electricVoltageComplex_sec.v, derivative.u) annotation (Line(
        points={{-48,-74},{-70,-74},{-70,-60},{-92,-60},{-92,-52},{-70,-52}},
        color={0,135,135},
        pattern=LinePattern.Dash));
    connect(input_from_OLTC, realToInteger.u) annotation (Line(points={{-100,60},{-74,60}}, color={0,0,127}));
    connect(greaterWarning.y, andWarning.u2) annotation (Line(points={{20.6,22},{34,22},{34,29.4},{52.6,29.4}}, color={255,0,255}));
    connect(andWarning.y, eLIVES_Warning) annotation (Line(points={{68.7,35},{78,35},{78,40},{100,40}}, color={255,0,255}));
    connect(electricVoltageComplex_prim.epp, epp_prim) annotation (Line(
        points={{-68,0.2},{-77,0.2},{-77,0},{-88,0}},
        color={28,108,200},
        thickness=0.5));
    connect(lessHV_Alarm.y, HV_Alarm) annotation (Line(points={{-23,-26},{-20,-26},{-20,-52},{2,-52},{2,-80},{100,-80}},                       color={255,0,255}));
    connect(andAlarm.y, eLIVES_Alarm) annotation (Line(points={{86.7,-7},{88,-7},{88,-22},{94,-22},{94,-20},{100,-20}}, color={255,0,255}));
    connect(andAlarm.u1, eLIVES_Warning) annotation (Line(points={{70.6,-7},{70.6,32},{78,32},{78,40},{100,40}},
                                                                                                               color={255,0,255}));
    connect(storeHV.u, electricVoltageComplex_prim.v) annotation (Line(points={{-35.2,4},{-44,4},{-44,-4},{-48,-4},{-48,6}}, color={0,0,127}));
    connect(substractionHV.u1, storeHV.y) annotation (Line(points={{12,2},{-4,2},{-4,4},{-21.4,4}}, color={0,0,127}));
    connect(substractionHV.u2, electricVoltageComplex_prim.v) annotation (Line(points={{20,-6},{-48,-6},{-48,6}}, color={0,0,127}));
    connect(andAlarm.u2, greaterAlarm.y) annotation (Line(points={{70.6,-12.6},{64,-12.6},{64,-2},{58.7,-2}}, color={255,0,255}));
    connect(continuousMean.u, switch.y) annotation (Line(points={{10,-68},{-5,-68}}, color={0,0,127}));
    connect(derivative.y, switch.u1) annotation (Line(points={{-47,-52},{-38,-52},{-38,-60},{-28,-60}}, color={0,0,127}));
    connect(const.y, switch.u3) annotation (Line(points={{-31.4,-92},{-28,-92},{-28,-76}}, color={0,0,127}));
    connect(DelayBlock.u, continuousMean.y) annotation (Line(points={{42,-68},{33,-68}}, color={0,0,127}));
    connect(DelayBlock.y, greaterWarning.u1) annotation (Line(points={{65,-68},{72,-68},{72,-50},{-6,-50},{-6,22},{6.8,22}}, color={0,0,127}));
    connect(greaterAlarm.u, substractionHV.y) annotation (Line(points={{42.6,-2},{36,-2},{36,2},{29,2}}, color={0,0,127}));
    connect(lessHV_Alarm.u, electricVoltageComplex_prim.v) annotation (Line(points={{-46,-26},{-48,-26},{-48,6}}, color={0,0,127}));
    connect(andTimer.y, andWarning.u1) annotation (Line(points={{30.5,39},{36.35,39},{36.35,35},{52.6,35}}, color={255,0,255}));
    connect(switch.u2, andTimer.u2) annotation (Line(points={{-28,-68},{-44,-68},{-44,-42},{-12,-42},{-12,35},{19,35}},               color={255,0,255}));
    connect(storeHV.trigger, andTimer.u2) annotation (Line(points={{-28,11.08},{-28,36},{-4,36},{-4,35},{19,35}},           color={255,0,255}));
    connect(greaterWarning.u2, continuousMean.y) annotation (Line(points={{6.8,17.2},{6.8,-68},{33,-68}}, color={0,0,127}));
    connect(expression_tap_change_occurred.y, Timer_recording.u) annotation (Line(points={{-12.4,60},{10.4,60}},color={255,0,255}));
    connect(expression_tapMaxreached.y, Timer_OLTCLimit.u) annotation (Line(points={{-16.4,90},{4,90}}, color={255,0,255}));
    connect(andTimer.u2, Timer_recording.u) annotation (Line(points={{19,35},{-6,35},{-6,60},{10.4,60}}, color={255,0,255}));
    connect(Timer_OLTCLimit.y, greater_OLTCLimit.u) annotation (Line(points={{27,90},{50,90}}, color={0,0,127}));
    connect(greater_Timer_recording.u, Timer_recording.y) annotation (Line(points={{46,58},{38,58},{38,60},{28.8,60}}, color={0,0,127}));
    connect(greater_OLTCLimit.y, pre_OLTCLimit.u) annotation (Line(points={{73,90},{80,90}}, color={255,0,255}));
    connect(greater_Timer_recording.y, pre_Timer_recording.u) annotation (Line(points={{69,58},{80,58}}, color={255,0,255}));
    connect(expression_tapMaxreached1.y, andTimer.u1) annotation (Line(points={{-24.4,44},{-4,44},{-4,39},{19,39}}, color={255,0,255}));
    annotation (Icon(coordinateSystem(preserveAspectRatio=false), graphics={
                             Text(
          extent={{-100,100},{100,-100}},
          lineColor={28,108,200},
          textString="!")}),                                       Diagram(coordinateSystem(preserveAspectRatio=false)));
  end eLIVES;

  model OLTC_OutputCurrentTap
    extends TransiEnt.Components.Electrical.PowerTransformation.OLTC.TapChangerController;
    Modelica.Blocks.Interfaces.RealOutput CurrentTapOut annotation (Placement(transformation(extent={{90,-86},{110,-66}})));
    Modelica.Blocks.Sources.RealExpression realExpression(y=currentTap) annotation (Placement(transformation(extent={{40,-86},{60,-66}})));
  equation
    connect(realExpression.y, CurrentTapOut) annotation (Line(points={{61,-76},{100,-76}}, color={0,0,127}));
  end OLTC_OutputCurrentTap;
annotation (Icon(graphics={Text(
        extent={{-100,106},{100,-94}},
        lineColor={28,108,200},
        textString="!")}));
end Kapitel5_1;
